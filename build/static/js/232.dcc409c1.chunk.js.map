{"version":3,"file":"static/js/232.dcc409c1.chunk.js","mappings":";gdAEe,SAASA,EAAWC,EAAQC,EAAMC,GAa/C,OAXEH,GADE,EAAAI,EAAA,KACWC,QAAQC,UAAUC,OAElB,SAAoBN,EAAQC,EAAMC,GAC7C,IAAIK,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGN,GAChB,IACIS,EAAW,IADGC,SAASL,KAAKG,MAAMT,EAAQO,IAG9C,OADIL,IAAO,EAAAU,EAAA,GAAeF,EAAUR,EAAMW,WACnCH,CACT,EAEKX,EAAWU,MAAM,KAAMK,UAChC,CCZe,SAASC,EAAiBb,GACvC,IAAIc,EAAwB,oBAARC,IAAqB,IAAIA,SAAQC,EAuBrD,OAtBAH,EAAmB,SAA0Bb,GAC3C,GAAc,OAAVA,ICPkCiB,EDOEjB,GCNsB,IAAzDS,SAASS,SAASC,KAAKF,GAAIG,QAAQ,kBDMQ,OAAOpB,ECP5C,IAA2BiB,EDQtC,GAAqB,oBAAVjB,EACT,MAAM,IAAIqB,UAAU,sDAEtB,GAAsB,qBAAXP,EAAwB,CACjC,GAAIA,EAAOQ,IAAItB,GAAQ,OAAOc,EAAOS,IAAIvB,GACzCc,EAAOU,IAAIxB,EAAOyB,EACpB,CACA,SAASA,IACP,OAAO,EAAUzB,EAAOY,WAAW,EAAAc,EAAA,GAAeC,MAAMC,YAC1D,CASA,OARAH,EAAQd,UAAYkB,OAAOC,OAAO9B,EAAMW,UAAW,CACjDiB,YAAa,CACXG,MAAON,EACPO,YAAY,EACZC,UAAU,EACVC,cAAc,MAGX,EAAAxB,EAAA,GAAee,EAASzB,EACjC,EACOa,EAAiBb,EAC1B,CERa,ICJPmC,EAAoB,SAAUC,GAIlC,IAFA,IAAMC,EAAgB,GAClBC,EAAI,EACCC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACnC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACNJ,EAAIC,KAAOG,EACFA,EAAI,MACbJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEL,SAAZ,MAAJA,IACDF,EAAI,EAAIH,EAAII,QACyB,SAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAGpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAEtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,IAEzB,CACD,OAAOJ,CACT,EA4DaM,EAAiB,CAI5BC,eAAgB,KAKhBC,eAAgB,KAMhBC,sBAAuB,KAMvBC,sBAAuB,KAMvBC,kBACE,iEAKEC,mBACF,OAAOtB,KAAKqB,kBAAoB,OAM9BE,2BACF,OAAOvB,KAAKqB,kBAAoB,OAUlCG,mBAAoC,oBAATC,KAW3BC,gBAAe,SAACC,EAA8BC,GAC5C,IAAKC,MAAMC,QAAQH,GACjB,MAAMI,MAAM,iDAGd/B,KAAKgC,QAQL,IANA,IAAMC,EAAgBL,EAClB5B,KAAKmB,sBACLnB,KAAKiB,eAEHiB,EAAS,GAENtB,EAAI,EAAGA,EAAIe,EAAMd,OAAQD,GAAK,EAAG,CACxC,IAAMuB,EAAQR,EAAMf,GACdwB,EAAYxB,EAAI,EAAIe,EAAMd,OAC1BwB,EAAQD,EAAYT,EAAMf,EAAI,GAAK,EACnC0B,EAAY1B,EAAI,EAAIe,EAAMd,OAC1B0B,EAAQD,EAAYX,EAAMf,EAAI,GAAK,EAEnC4B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EAC/CK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EAEVD,IACHK,EAAW,GAENP,IACHM,EAAW,KAIfR,EAAOvD,KACLsD,EAAcO,GACdP,EAAcQ,GACdR,EAAcS,GACdT,EAAcU,GAEjB,CAED,OAAOT,EAAOU,KAAK,KAWrBC,aAAY,SAAClB,EAAeC,GAG1B,OAAI5B,KAAKwB,qBAAuBI,EACvBkB,KAAKnB,GAEP3B,KAAK0B,gBAAgBlB,EAAkBmB,GAAQC,IAWxDmB,aAAY,SAACpB,EAAeC,GAG1B,OAAI5B,KAAKwB,qBAAuBI,EACvBH,KAAKE,GA3LQ,SAAUqB,GAKlC,IAHA,IAAMtC,EAAgB,GAClBuC,EAAM,EACRnC,EAAI,EACCmC,EAAMD,EAAMnC,QAAQ,CACzB,IAAMqC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACPxC,EAAII,KAAOqC,OAAOC,aAAaF,QAC1B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC/B,IAAMG,EAAKL,EAAMC,KACjBvC,EAAII,KAAOqC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,EACpD,MAAM,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE/B,IAGMI,IACI,EAALJ,IAAW,IAAa,GAJlBF,EAAMC,OAImB,IAAa,GAHtCD,EAAMC,OAGuC,EAAW,GAFxDD,EAAMC,MAGf,MACFvC,EAAII,KAAOqC,OAAOC,aAAa,OAAUE,GAAK,KAC9C5C,EAAII,KAAOqC,OAAOC,aAAa,OAAc,KAAJE,GAC1C,KAAM,CACL,IAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBvC,EAAII,KAAOqC,OAAOC,cACT,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,EAE3C,CACF,CACD,OAAO7C,EAAIkC,KAAK,GAClB,CA8JWY,CAAkBxD,KAAKyD,wBAAwB9B,EAAOC,KAkB/D6B,wBAAuB,SAAC9B,EAAeC,GACrC5B,KAAKgC,QAQL,IANA,IAAM0B,EAAgB9B,EAClB5B,KAAKoB,sBACLpB,KAAKkB,eAEHgB,EAAmB,GAEhBtB,EAAI,EAAGA,EAAIe,EAAMd,QAAU,CAClC,IAAMsB,EAAQuB,EAAc/B,EAAMgC,OAAO/C,MAGnCyB,EADYzB,EAAIe,EAAMd,OACF6C,EAAc/B,EAAMgC,OAAO/C,IAAM,EAIrD2B,IAHJ3B,EAEoBe,EAAMd,OACF6C,EAAc/B,EAAMgC,OAAO/C,IAAM,GAIrDgD,IAHJhD,EAEoBe,EAAMd,OACF6C,EAAc/B,EAAMgC,OAAO/C,IAAM,GAG3D,KAFEA,EAEW,MAATuB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATqB,EACrD,MAAM,IAAIC,EAGZ,IAAMrB,EAAYL,GAAS,EAAME,GAAS,EAG1C,GAFAH,EAAOvD,KAAK6D,GAEE,KAAVD,EAAc,CAChB,IAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAGnD,GAFAL,EAAOvD,KAAK8D,GAEE,KAAVmB,EAAc,CAChB,IAAMlB,EAAaH,GAAS,EAAK,IAAQqB,EACzC1B,EAAOvD,KAAK+D,EACb,CACF,CACF,CAED,OAAOR,GAQTF,MAAK,WACH,IAAKhC,KAAKiB,eAAgB,CACxBjB,KAAKiB,eAAiB,CAAC,EACvBjB,KAAKkB,eAAiB,CAAC,EACvBlB,KAAKmB,sBAAwB,CAAC,EAC9BnB,KAAKoB,sBAAwB,CAAC,EAG9B,IAAK,IAAIR,EAAI,EAAGA,EAAIZ,KAAKsB,aAAaT,OAAQD,IAC5CZ,KAAKiB,eAAeL,GAAKZ,KAAKsB,aAAaqC,OAAO/C,GAClDZ,KAAKkB,eAAelB,KAAKiB,eAAeL,IAAMA,EAC9CZ,KAAKmB,sBAAsBP,GAAKZ,KAAKuB,qBAAqBoC,OAAO/C,GACjEZ,KAAKoB,sBAAsBpB,KAAKmB,sBAAsBP,IAAMA,EAGxDA,GAAKZ,KAAKqB,kBAAkBR,SAC9Bb,KAAKkB,eAAelB,KAAKuB,qBAAqBoC,OAAO/C,IAAMA,EAC3DZ,KAAKoB,sBAAsBpB,KAAKsB,aAAaqC,OAAO/C,IAAMA,EAG/D,IAOQiD,EAAwB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAArC,SAAAA,IAAA,IAAAK,EAC4C,OAD5CC,EAAAA,EAAAA,GAAA,KAAAN,+BACeO,KAAG,0BAA0BF,EAC3C,OAAAG,EAAAA,EAAAA,GAAAR,EAAA,CAFoC,CAEpC3E,EAF4C6C,QAgBhCuC,EAAgC,SAAU7D,GAErD,OAX0B,SAAUA,GACpC,IAAM8D,EAAY/D,EAAkBC,GACpC,OAAOO,EAAOU,gBAAgB6C,GAAW,EAC3C,CAQSC,CAAa/D,GAAKgE,QAAQ,MAAO,GAC1C,EAWaC,EAAe,SAAUjE,GACpC,IACE,OAAOO,EAAO+B,aAAatC,GAAK,EACjC,CAAC,MAAOkE,GACPC,QAAQC,MAAM,wBAAyBF,EACxC,CACD,OAAO,IACT,EChUA,IAAMG,EAAwB,WAAH,kBChCzB,GAAoB,qBAATC,KACT,OAAOA,KAET,GAAsB,qBAAXC,OACT,OAAOA,OAET,GAAsB,qBAAXC,EAAAA,EACT,OAAOA,EAAAA,EAET,MAAM,IAAIlD,MAAM,kCAClB,CDuBEmD,GAAYC,qBAAqB,EA2CtBC,EAAc,WACzB,IACE,OACEN,KApC6B,WACjC,GAAuB,qBAAZO,QAAX,CAGA,IAAMC,EAAqBD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYF,sBACvC,OAAIG,EACKC,KAAKC,MAAMF,QADpB,CAFC,CAKH,CA6BMG,IA3BwB,WAC5B,GAAwB,qBAAbC,SAAX,CAGA,IAAIC,EACJ,IACEA,EAAQD,SAASE,OAAOD,MAAM,gCAC/B,CAAC,MAAOhB,GAGP,MACD,CACD,IAAMkB,EAAUF,GAASjB,EAAaiB,EAAM,IAC5C,OAAOE,GAAWN,KAAKC,MAAMK,EAV5B,CAWH,CAcMC,EAEH,CAAC,MAAOnB,GAQP,YADAC,QAAQmB,KAAK,+CAADC,OAAgDrB,GAE7D,CACH,EAkBasB,EAAoC,SAC/CC,GAEA,IAAMC,EAb8B,SACpCD,GACuB,IAAAE,EAAAC,EAAA,OAA4B,QAA5BA,EAAe,QAAfD,EAAAhB,WAAe,IAAAgB,OAAA,EAAAA,EAAAE,qBAAa,IAAAD,OAAA,EAAAA,EAAGH,EAAY,CAWrDK,CAAuBL,GACpC,GAAKC,EAAL,CAGA,IAAMK,EAAiBL,EAAKM,YAAY,KACxC,GAAID,GAAkB,GAAKA,EAAiB,IAAML,EAAKtF,OACrD,MAAM,IAAIkB,MAAM,gBAADiE,OAAiBG,EAAI,yCAGtC,IAAMO,EAAOC,SAASR,EAAKS,UAAUJ,EAAiB,GAAI,IAC1D,MAAgB,MAAZL,EAAK,GAEA,CAACA,EAAKS,UAAU,EAAGJ,EAAiB,GAAIE,GAExC,CAACP,EAAKS,UAAU,EAAGJ,GAAiBE,EAX5C,CAaH,EAMaG,EAAsB,WAAyC,IAAAT,EAC1E,OAAa,QAAbA,EAAAhB,WAAa,IAAAgB,OAAA,EAAAA,EAAEU,MAAM,EE/IVC,EAAQ,WAInB,SAAAA,IAAA,IAAAC,EAAA,MAAA7C,EAAAA,EAAAA,GAAA,KAAA4C,GAFA,KAAAE,OAAoC,WAAK,EACzC,KAAAC,QAAqC,WAAK,EAExClH,KAAKmH,QAAU,IAAIC,SAAQ,SAACF,EAASD,GACnCD,EAAKE,QAAUA,EACfF,EAAKC,OAASA,CAChB,IA+BD,OA5BD5C,EAAAA,EAAAA,GAAA0C,EAAA,EAAAM,IAAA,eAAAjH,MAKA,SACEkH,GAAqD,IAAAC,EAAA,KAErD,OAAO,SAAC1C,EAAOzE,GACTyE,EACF0C,EAAKN,OAAOpC,GAEZ0C,EAAKL,QAAQ9G,GAES,oBAAbkH,IAGTC,EAAKJ,QAAQK,OAAM,WAAK,IAIA,IAApBF,EAASzG,OACXyG,EAASzC,GAETyC,EAASzC,EAAOzE,GAGtB,MACD2G,CAAA,CAvCkB,YCoILU,IACd,IACE,MAA4B,kBAAdC,SACf,CAAC,MAAO/C,GACP,OAAO,CACR,CACH,UASgBgD,IACd,OAAO,IAAIP,SAAQ,SAACF,EAASD,GAC3B,IACE,IAAIW,GAAoB,EAClBC,EACJ,0DACIC,EAAU/C,KAAK2C,UAAUK,KAAKF,GACpCC,EAAQE,UAAY,WAClBF,EAAQG,OAAOC,QAEVN,GACH7C,KAAK2C,UAAUS,eAAeN,GAEhCX,GAAQ,EACV,EACAY,EAAQM,gBAAkB,WACxBR,GAAW,CACb,EAEAE,EAAQO,QAAU,iBAChBpB,GAAoB,QAAbb,EAAA0B,EAAQjD,aAAK,IAAAuB,OAAA,EAAAA,EAAEkC,UAAW,GACnC,CACD,CAAC,MAAOzD,GACPoC,EAAOpC,EACR,CACH,GACF,CCjIA,IAYa0D,EAAc,SAAAC,IAAAzE,EAAAA,EAAAA,GAAAwE,EAAAC,GAAA,IAAAC,GAAAxE,EAAAA,EAAAA,GAAAsE,GAIzB,SAAAA,EAEWG,EACTJ,EAEOK,GAAoC,IAAAC,EAY1C,OAZ0CzE,EAAAA,EAAAA,GAAA,KAAAoE,IAE3CK,EAAAH,EAAAjJ,KAAA,KAAM8I,IALOI,KAAJA,EAGFE,EAAUD,WAAVA,EAPAC,EAAIxE,KAdI,gBA2BflE,OAAOnB,gBAAc8J,EAAAA,EAAAA,GAAAD,GAAOL,EAAcvJ,WAItC+C,MAAM+G,mBACR/G,MAAM+G,mBAAiBD,EAAAA,EAAAA,GAAAD,GAAOG,EAAa/J,UAAUmB,QACtDyI,EACF,OAAAvE,EAAAA,EAAAA,GAAAkE,EAAA,CAtBwB,CAsBxBrJ,EAtBgC6C,QAyBtBgH,EAAY,WAIvB,SAAAA,EACmBC,EACAC,EACAC,IAA2B/E,EAAAA,EAAAA,GAAA,KAAA4E,GAF3B,KAAOC,QAAPA,EACA,KAAWC,YAAXA,EACA,KAAMC,OAANA,EAkBlB,OAjBG7E,EAAAA,EAAAA,GAAA0E,EAAA,EAAA1B,IAAA,SAAAjH,MAEJ,SACEsI,GAGA,IAAMC,GAAc1J,UAAA4B,QAAA,OAAAxB,EAAAJ,UAAA,KAAyB,CAAC,EACxCkK,EAAW,GAAHnD,OAAMhG,KAAKgJ,QAAO,KAAAhD,OAAI0C,GAC9BU,EAAWpJ,KAAKkJ,OAAOR,GAEvBJ,EAAUc,EAUpB,SAAyBA,EAAkBC,GACzC,OAAOD,EAAS3E,QAAQ6E,GAAS,SAACC,EAAGlC,GACnC,IAAMjH,EAAQiJ,EAAKhC,GACnB,OAAgB,MAATjH,EAAgB+C,OAAO/C,GAAS,IAAH4F,OAAOqB,EAAG,KAChD,GACF,CAf+BmC,CAAgBJ,EAAUT,GAAc,QAE7Dc,EAAc,GAAHzD,OAAMhG,KAAKiJ,YAAW,MAAAjD,OAAKsC,EAAO,MAAAtC,OAAKmD,EAAQ,MAIhE,OAFc,IAAIZ,EAAcY,EAAUM,EAAad,OAGxDI,CAAA,CAzBsB,GAmCzB,IAAMO,EAAU,gBC3EA,SAAAI,EAAUhL,EAAWiL,GACnC,GAAIjL,IAAMiL,EACR,OAAO,EAKT,IAFA,IAAMC,EAAQ1J,OAAO2J,KAAKnL,GACpBoL,EAAQ5J,OAAO2J,KAAKF,GAC1BI,EAAA,EAAAC,EAAgBJ,EAAKG,EAAAC,EAAAnJ,OAAAkJ,IAAE,CAAlB,IAAME,EAACD,EAAAD,GACV,IAAKD,EAAMI,SAASD,GAClB,OAAO,EAGT,IAAME,EAASzL,EAA8BuL,GACvCG,EAAST,EAA8BM,GAC7C,GAAII,EAASF,IAAUE,EAASD,IAC9B,IAAKV,EAAUS,EAAOC,GACpB,OAAO,OAEJ,GAAID,IAAUC,EACnB,OAAO,CAEV,CAED,IAAK,IAALE,EAAA,EAAAC,EAAgBT,EAAKQ,EAAAC,EAAA1J,OAAAyJ,IAAE,CAAlB,IAAML,EAACM,EAAAD,GACV,IAAKV,EAAMM,SAASD,GAClB,OAAO,CAEV,CACD,OAAO,CACT,CAEA,SAASI,EAASG,GAChB,OAAiB,OAAVA,GAAmC,kBAAVA,CAClC,CCtEM,SAAUC,EACdzB,GAEA,OAAIA,GAAYA,EAA+B0B,UACrC1B,EAA+B0B,UAEhC1B,CAEX,wBC7Be,SAASH,EAAuB9D,GAC7C,QAAa,IAATA,EACF,MAAM,IAAI4F,eAAe,6DAE3B,OAAO5F,CACT,uDCLe,SAASZ,EAAgBtF,EAAU+L,GAChD,KAAM/L,aAAoB+L,GACxB,MAAM,IAAIlL,UAAU,oCAExB,qGCHA,SAASmL,EAAkBC,EAAQC,GACjC,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAMlK,OAAQD,IAAK,CACrC,IAAIoK,EAAaD,EAAMnK,GACvBoK,EAAW3K,WAAa2K,EAAW3K,aAAc,EACjD2K,EAAWzK,cAAe,EACtB,UAAWyK,IAAYA,EAAW1K,UAAW,GACjDJ,OAAO+K,eAAeH,GAAQ,OAAcE,EAAW3D,KAAM2D,EAC/D,CACF,CACe,SAAS3G,EAAauG,EAAaM,EAAYC,GAM5D,OALID,GAAYL,EAAkBD,EAAY5L,UAAWkM,GACrDC,GAAaN,EAAkBD,EAAaO,GAChDjL,OAAO+K,eAAeL,EAAa,YAAa,CAC9CtK,UAAU,IAELsK,CACT,qEChBe,SAASQ,EAA2BC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAI1J,MAAMC,QAAQuJ,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAExK,OAAqB,CAC/G0K,IAAIF,EAAIE,GACZ,IAAI3K,EAAI,EACJ8K,EAAI,WAAc,EACtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIhL,GAAKyK,EAAExK,OAAe,CACxBgL,MAAM,GAED,CACLA,MAAM,EACNzL,MAAOiL,EAAEzK,KAEb,EACA+D,EAAG,SAAWmH,GACZ,MAAMA,CACR,EACAC,EAAGL,EAEP,CACA,MAAM,IAAIhM,UAAU,wIACtB,CACA,IAEEsM,EAFEC,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLP,EAAG,WACDJ,EAAKA,EAAG/L,KAAK6L,EACf,EACAO,EAAG,WACD,IAAIO,EAAOZ,EAAGa,OAEd,OADAH,EAAmBE,EAAKN,KACjBM,CACT,EACAxH,EAAG,SAAW0H,GACZH,GAAS,EACTF,EAAMK,CACR,EACAN,EAAG,WACD,IACOE,GAAoC,MAAhBV,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIW,EAAQ,MAAMF,CACpB,CACF,EAEJ,oGChDe,SAAS/H,EAAaqI,GACnC,IAAIC,GAA4B,EAAAjO,EAAA,KAChC,OAAO,WACL,IACE2J,EADEuE,GAAQ,EAAAzM,EAAA,GAAeuM,GAE3B,GAAIC,EAA2B,CAC7B,IAAIE,GAAY,EAAA1M,EAAA,GAAeC,MAAMC,YACrCgI,EAAS1J,QAAQC,UAAUgO,EAAOvN,UAAWwN,EAC/C,MACExE,EAASuE,EAAM5N,MAAMoB,KAAMf,WAE7B,OCZW,SAAoC8F,EAAMvF,GACvD,GAAIA,IAA2B,YAAlB,OAAQA,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIE,UAAU,4DAEtB,OAAO,EAAAgN,EAAA,GAAsB3H,EAC/B,CDKW,CAA0B/E,KAAMiI,EACzC,CACF,wBEhBe,SAAS0E,EAAgBtB,GAItC,OAHAsB,EAAkBzM,OAAOnB,eAAiBmB,OAAOH,eAAetB,OAAS,SAAyB4M,GAChG,OAAOA,EAAEuB,WAAa1M,OAAOH,eAAesL,EAC9C,EACOsB,EAAgBtB,EACzB,oGCJe,SAAStH,EAAU8I,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIpN,UAAU,sDAEtBmN,EAAS7N,UAAYkB,OAAOC,OAAO2M,GAAcA,EAAW9N,UAAW,CACrEiB,YAAa,CACXG,MAAOyM,EACPvM,UAAU,EACVC,cAAc,KAGlBL,OAAO+K,eAAe4B,EAAU,YAAa,CAC3CvM,UAAU,IAERwM,IAAY,OAAeD,EAAUC,EAC3C,wBChBe,SAASC,IACtB,GAAuB,qBAAZxO,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUwO,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EACxC,IAEE,OADAC,QAAQlO,UAAUmO,QAAQ3N,KAAKjB,QAAQC,UAAU0O,QAAS,IAAI,WAAa,MACpE,CACT,CAAE,MAAOvI,GACP,OAAO,CACT,CACF,iHCNe,SAASyI,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIxL,MAAMC,QAAQuL,GAAM,OAAO,EAAAC,EAAA,GAAiBD,EAClD,CDES,CAAkBA,IELZ,SAA0BE,GACvC,GAAsB,qBAAX/B,QAAmD,MAAzB+B,EAAK/B,OAAOC,WAA2C,MAAtB8B,EAAK,cAAuB,OAAO1L,MAAM2L,KAAKD,EACtH,CFGmC,CAAgBF,KAAQ,EAAAI,EAAA,GAA2BJ,IGLvE,WACb,MAAM,IAAI3N,UAAU,uIACtB,CHG8F,EAC9F,kKIgDYgO,kFAbCC,EAAsB,IAanC,SAAYD,GACVA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,qBACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,eACAA,EAAAA,EAAA,iBACAA,EAAAA,EAAA,kBACD,CAPD,CAAYA,IAAAA,EAOX,KAED,IAAME,EAA2D,CAC/D,MAASF,EAASG,MAClB,QAAWH,EAASI,QACpB,KAAQJ,EAASK,KACjB,KAAQL,EAASM,KACjB,MAASN,EAASO,MAClB,OAAUP,EAASQ,QAMfC,EAA4BT,EAASK,KAmBrCK,GAAaC,EAAG,CAAC,GAAJC,EAAAA,EAAAA,GAAAD,EAChBX,EAASG,MAAQ,QAAKS,EAAAA,EAAAA,GAAAD,EACtBX,EAASI,QAAU,QAAKQ,EAAAA,EAAAA,GAAAD,EACxBX,EAASK,KAAO,SAAMO,EAAAA,EAAAA,GAAAD,EACtBX,EAASM,KAAO,SAAMM,EAAAA,EAAAA,GAAAD,EACtBX,EAASO,MAAQ,SAAOI,GAQrBE,EAAgC,SAAC1P,EAAU2P,GAC/C,KAAIA,EAAU3P,EAAS4P,UAAvB,CAGA,IAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAAST,EAAcI,GAC7B,IAAIK,EAMF,MAAM,IAAI9M,MAAM,8DAADiE,OACiDwI,EAAO,MAP7D,QAAAM,EAAAC,EAAA9P,UAAA4B,OAN+CzC,EAAI,IAAAyD,MAAAkN,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5Q,EAAI4Q,EAAA,GAAA/P,UAAA+P,IAO7DF,EAAAlK,SAAQiK,GAA4CjQ,MAAAkQ,EAAA,KAAA9I,OAC9C0I,EAAG,OAAA1I,OAAMnH,EAASuF,KAAI,MAAA4B,OACvB5H,GANN,CAaH,EAEa6Q,EAAM,WAOjB,SAAAA,EAAmB7K,IAAYD,EAAAA,EAAAA,GAAA,KAAA8K,GAAZ,KAAI7K,KAAJA,EAUX,KAAS8K,UAAGf,EAsBZ,KAAWgB,YAAeZ,EAc1B,KAAea,gBAAsB,KA1C3CzB,EAAUhP,KAAKqB,MA0EhB,OAzEAqE,EAAAA,EAAAA,GAAA4K,EAAA,EAAA5H,IAAA,WAAAzH,IAOD,WACE,OAAOI,KAAKkP,WACbrP,IAED,SAAawP,GACX,KAAMA,KAAO3B,GACX,MAAM,IAAIhO,UAAU,kBAADsG,OAAmBqJ,EAAG,6BAE3CrP,KAAKkP,UAAYG,6BAInB,SAAYA,GACVrP,KAAKkP,UAA2B,kBAARG,EAAmBzB,EAAkByB,GAAOA,IACrE,CAAAhI,IAAA,aAAAzH,IAOD,WACE,OAAOI,KAAKmP,aACbtP,IACD,SAAewP,GACb,GAAmB,oBAARA,EACT,MAAM,IAAI3P,UAAU,qDAEtBM,KAAKmP,YAAcE,IACpB,CAAAhI,IAAA,iBAAAzH,IAMD,WACE,OAAOI,KAAKoP,iBACbvP,IACD,SAAmBwP,GACjBrP,KAAKoP,gBAAkBC,IAGzB,CAAAhI,IAAA,QAAAjH,MAIA,WAAwB,QAAAkP,EAAArQ,UAAA4B,OAAfzC,EAAe,IAAAyD,MAAAyN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfnR,EAAemR,GAAAtQ,UAAAsQ,GACtBvP,KAAKoP,iBAAmBpP,KAAKoP,gBAAexQ,MAApBoB,KAAI,CAAiBA,KAAM0N,EAASG,OAAK7H,OAAK5H,IACtE4B,KAAKmP,YAAWvQ,MAAhBoB,KAAI,CAAaA,KAAM0N,EAASG,OAAK7H,OAAK5H,MAC3C,CAAAiJ,IAAA,MAAAjH,MACD,WAAsB,QAAAoP,EAAAvQ,UAAA4B,OAAfzC,EAAe,IAAAyD,MAAA2N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfrR,EAAeqR,GAAAxQ,UAAAwQ,GACpBzP,KAAKoP,iBACHpP,KAAKoP,gBAAexQ,MAApBoB,KAAI,CAAiBA,KAAM0N,EAASI,SAAO9H,OAAK5H,IAClD4B,KAAKmP,YAAWvQ,MAAhBoB,KAAI,CAAaA,KAAM0N,EAASI,SAAO9H,OAAK5H,MAC7C,CAAAiJ,IAAA,OAAAjH,MACD,WAAuB,QAAAsP,EAAAzQ,UAAA4B,OAAfzC,EAAe,IAAAyD,MAAA6N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfvR,EAAeuR,GAAA1Q,UAAA0Q,GACrB3P,KAAKoP,iBAAmBpP,KAAKoP,gBAAexQ,MAApBoB,KAAI,CAAiBA,KAAM0N,EAASK,MAAI/H,OAAK5H,IACrE4B,KAAKmP,YAAWvQ,MAAhBoB,KAAI,CAAaA,KAAM0N,EAASK,MAAI/H,OAAK5H,MAC1C,CAAAiJ,IAAA,OAAAjH,MACD,WAAuB,QAAAwP,EAAA3Q,UAAA4B,OAAfzC,EAAe,IAAAyD,MAAA+N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAfzR,EAAeyR,GAAA5Q,UAAA4Q,GACrB7P,KAAKoP,iBAAmBpP,KAAKoP,gBAAexQ,MAApBoB,KAAI,CAAiBA,KAAM0N,EAASM,MAAIhI,OAAK5H,IACrE4B,KAAKmP,YAAWvQ,MAAhBoB,KAAI,CAAaA,KAAM0N,EAASM,MAAIhI,OAAK5H,MAC1C,CAAAiJ,IAAA,QAAAjH,MACD,WAAwB,QAAA0P,EAAA7Q,UAAA4B,OAAfzC,EAAe,IAAAyD,MAAAiO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAf3R,EAAe2R,GAAA9Q,UAAA8Q,GACtB/P,KAAKoP,iBAAmBpP,KAAKoP,gBAAexQ,MAApBoB,KAAI,CAAiBA,KAAM0N,EAASO,OAAKjI,OAAK5H,IACtE4B,KAAKmP,YAAWvQ,MAAhBoB,KAAI,CAAaA,KAAM0N,EAASO,OAAKjI,OAAK5H,QAC3C6Q,CAAA,CArFgB,OC3Hfe,EACAC,sBAHEC,EAAgB,SAACC,EAAQC,GAAY,OAAKA,EAAaC,MAAK,SAACvP,GAAC,OAAKqP,aAAkBrP,CAAC,GAAC,EAwB7F,IAAMwP,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QA0DlC,IAAIK,EAAgB,CAChBhR,IAAG,SAACkL,EAAQ+F,EAAMC,GACd,GAAIhG,aAAkBiG,eAAgB,CAElC,GAAa,SAATF,EACA,OAAOL,EAAmB5Q,IAAIkL,GAElC,GAAa,qBAAT+F,EACA,OAAO/F,EAAOkG,kBAAoBP,EAAyB7Q,IAAIkL,GAGnE,GAAa,UAAT+F,EACA,OAAOC,EAASE,iBAAiB,QAC3B3R,EACAyR,EAASG,YAAYH,EAASE,iBAAiB,GAE7D,CAEA,OAAOE,EAAKpG,EAAO+F,GACvB,EACAhR,IAAG,SAACiL,EAAQ+F,EAAMzQ,GAEd,OADA0K,EAAO+F,GAAQzQ,GACR,CACX,EACAT,IAAG,SAACmL,EAAQ+F,GACR,OAAI/F,aAAkBiG,iBACR,SAATF,GAA4B,UAATA,IAGjBA,KAAQ/F,CACnB,GAKJ,SAASqG,EAAaC,GAIlB,OAAIA,IAASC,YAAYrS,UAAUsS,aAC7B,qBAAsBP,eAAe/R,WA7GnCiR,IACHA,EAAuB,CACpBsB,UAAUvS,UAAUwS,QACpBD,UAAUvS,UAAUyS,SACpBF,UAAUvS,UAAU0S,sBAqHExH,SAASkH,GAC5B,WAAmB,QAAA9B,EAAArQ,UAAA4B,OAANzC,EAAI,IAAAyD,MAAAyN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnR,EAAImR,GAAAtQ,UAAAsQ,GAIpB,OADA6B,EAAKxS,MAAM+S,EAAO3R,MAAO5B,GAClB8S,EAAKZ,EAAiB1Q,IAAII,MACrC,EAEG,WAAmB,QAAAwP,EAAAvQ,UAAA4B,OAANzC,EAAI,IAAAyD,MAAA2N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrR,EAAIqR,GAAAxQ,UAAAwQ,GAGpB,OAAOyB,EAAKE,EAAKxS,MAAM+S,EAAO3R,MAAO5B,GACzC,EAvBW,SAAUwT,GAAqB,QAAA7C,EAAA9P,UAAA4B,OAANzC,EAAI,IAAAyD,MAAAkN,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5Q,EAAI4Q,EAAA,GAAA/P,UAAA+P,GAChC,IAAM6C,EAAKT,EAAK5R,KAAIZ,MAATwS,EAAI,CAAMO,EAAO3R,MAAO4R,GAAU5L,OAAK5H,IAElD,OADAqS,EAAyB5Q,IAAIgS,EAAID,EAAWE,KAAOF,EAAWE,OAAS,CAACF,IACjEV,EAAKW,EAChB,CAoBR,CACA,SAASE,EAAuB3R,GAC5B,MAAqB,oBAAVA,EACA+Q,EAAa/Q,IAGpBA,aAAiB2Q,gBAhGzB,SAAwCc,GAEpC,IAAIrB,EAAmB7Q,IAAIkS,GAA3B,CAEA,IAAMhG,EAAO,IAAIzE,SAAQ,SAACF,EAASD,GAC/B,IAAM+K,EAAW,WACbH,EAAGI,oBAAoB,WAAYC,GACnCL,EAAGI,oBAAoB,QAASpN,GAChCgN,EAAGI,oBAAoB,QAASpN,EACpC,EACMqN,EAAW,WACbhL,IACA8K,GACJ,EACMnN,EAAQ,WACVoC,EAAO4K,EAAGhN,OAAS,IAAIsN,aAAa,aAAc,eAClDH,GACJ,EACAH,EAAGO,iBAAiB,WAAYF,GAChCL,EAAGO,iBAAiB,QAASvN,GAC7BgN,EAAGO,iBAAiB,QAASvN,EACjC,IAEA2L,EAAmB3Q,IAAIgS,EAAIhG,EApBjB,CAqBd,CAyEQwG,CAA+BjS,GAC/B8P,EAAc9P,EAzJV4P,IACHA,EAAoB,CACjBqB,YACAiB,eACAC,SACAhB,UACAR,kBAoJG,IAAI9D,MAAM7M,EAAOwQ,GAErBxQ,EACX,CACA,SAAS8Q,EAAK9Q,GAGV,GAAIA,aAAiBoS,WACjB,OA3IR,SAA0B1K,GACtB,IAAMX,EAAU,IAAIC,SAAQ,SAACF,EAASD,GAClC,IAAM+K,EAAW,WACblK,EAAQmK,oBAAoB,UAAWQ,GACvC3K,EAAQmK,oBAAoB,QAASpN,EACzC,EACM4N,EAAU,WACZvL,EAAQgK,EAAKpJ,EAAQG,SACrB+J,GACJ,EACMnN,EAAQ,WACVoC,EAAOa,EAAQjD,OACfmN,GACJ,EACAlK,EAAQsK,iBAAiB,UAAWK,GACpC3K,EAAQsK,iBAAiB,QAASvN,EACtC,IAcA,OAbAsC,EACKuL,MAAK,SAACtS,GAGHA,aAAiBmR,WACjBjB,EAAiBzQ,IAAIO,EAAO0H,EAGpC,IACKN,OAAM,WAAQ,IAGnBmJ,EAAsB9Q,IAAIsH,EAASW,GAC5BX,CACX,CA4GewL,CAAiBvS,GAG5B,GAAIsQ,EAAe/Q,IAAIS,GACnB,OAAOsQ,EAAe9Q,IAAIQ,GAC9B,IAAMwS,EAAWb,EAAuB3R,GAOxC,OAJIwS,IAAaxS,IACbsQ,EAAe7Q,IAAIO,EAAOwS,GAC1BjC,EAAsB9Q,IAAI+S,EAAUxS,IAEjCwS,CACX,CACA,IAAMjB,EAAS,SAACvR,GAAK,OAAKuQ,EAAsB/Q,IAAIQ,EAAM,ECrI1D,QAAMyS,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAI3T,IAC1B,SAAS4T,EAAUlI,EAAQ+F,GACvB,GAAM/F,aAAkBuG,eAClBR,KAAQ/F,IACM,kBAAT+F,EAFX,CAKA,GAAIkC,EAAcnT,IAAIiR,GAClB,OAAOkC,EAAcnT,IAAIiR,GAC7B,IAAMoC,EAAiBpC,EAAKpM,QAAQ,aAAc,IAC5CyO,EAAWrC,IAASoC,EACpBE,EAAUL,EAAa5I,SAAS+I,GACtC,GAEEA,KAAmBC,EAAWX,SAAWD,gBAAgBtT,YACrDmU,GAAWN,EAAY3I,SAAS+I,IAHtC,CAMA,IAAMpE,EAAM,eAAAuE,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAgBC,GAAS,IAAAC,EAAA7B,EAAA/G,EAAAiE,EAAA3Q,EAAA4Q,EAAA2E,EAAA1U,UAAA,OAAAqU,EAAAA,EAAAA,KAAApC,MAAA,SAAA0C,GAAA,cAAAA,EAAAC,KAAAD,EAAAxH,MAAA,OAGf,IADfyF,EAAK7R,KAAKsR,YAAYmC,EAAWN,EAAU,YAAc,YAC3DrI,EAAS+G,EAAGiC,MAAK/E,EAAA4E,EAAA9S,OAHoBzC,EAAI,IAAAyD,MAAAkN,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5Q,EAAI4Q,EAAA,GAAA2E,EAAA3E,GAU7C,OANIkE,IACApI,EAASA,EAAOiJ,MAAM3V,EAAK4V,UAK/BJ,EAAAxH,KAAA,EACchF,QAAQ6M,IAAI,EACtBP,EAAA5I,GAAOmI,GAAerU,MAAA8U,EAAItV,GAC1B+U,GAAWtB,EAAGhG,OAChB,cAAA+H,EAAAM,OAAA,SAAAN,EAAAO,KAAE,IAAC,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,UACR,gBAfWa,GAAA,OAAAjB,EAAAxU,MAAA,KAAAK,UAAA,KAiBZ,OADA8T,EAAclT,IAAIgR,EAAMhC,GACjBA,CAlBP,CAXA,CA8BJ,CDgCI+B,EC/BS,SAAC0D,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfD,GAAQ,IACX1U,IAAK,SAACkL,EAAQ+F,EAAMC,GAAQ,OAAKkC,EAAUlI,EAAQ+F,IAASyD,EAAS1U,IAAIkL,EAAQ+F,EAAMC,EAAS,EAChGnR,IAAK,SAACmL,EAAQ+F,GAAI,QAAOmC,EAAUlI,EAAQ+F,IAASyD,EAAS3U,IAAImL,EAAQ+F,EAAK,ID4B9DvJ,CAASsJ,GEvH7B,IAyBa4D,EAAyB,WACpC,SAAAA,EAA6BC,IAA6BtQ,EAAAA,EAAAA,GAAA,KAAAqQ,GAA7B,KAASC,UAATA,EAkB5B,oDAfD,WAIE,OAHkBzU,KAAKyU,UAAUC,eAI9BC,KAAI,SAAAC,GACH,GAmBR,SAAkCA,GAChC,IAAMC,EAAYD,EAASE,eAC3B,MAAsB,aAAf,OAAAD,QAAS,IAATA,OAAS,EAATA,EAAWE,KACpB,CAtBYC,CAAyBJ,GAAW,CACtC,IAAM5L,EAAU4L,EAASK,eACzB,MAAO,GAAPjP,OAAUgD,EAAQkM,QAAO,KAAAlP,OAAIgD,EAAQmM,QACtC,CACC,OAAO,IAEX,IACCC,QAAO,SAAAC,GAAS,OAAIA,CAAS,IAC7BzS,KAAK,SACT4R,CAAA,CAnBmC,oCCNzBc,EAAS,IAAIrG,EAAO,iBC6BpBsG,EAAqB,YAErBC,GAAmBC,EAAG,CAAC,GAAJnH,EAAAA,EAAAA,GAAAmH,EAC7BC,EAAU,cAAWpH,EAAAA,EAAAA,GAAAmH,yBACL,qBAAkBnH,EAAAA,EAAAA,GAAAmH,wBAClB,mBAAgBnH,EAAAA,EAAAA,GAAAmH,+BACV,0BAAuBnH,EAAAA,EAAAA,GAAAmH,wBAC9B,mBAAgBnH,EAAAA,EAAAA,GAAAmH,+BACV,0BAAuBnH,EAAAA,EAAAA,GAAAmH,mBACjC,cAAWnH,EAAAA,EAAAA,GAAAmH,0BACL,qBAAkBnH,EAAAA,EAAAA,GAAAmH,uBACpB,cAAWnH,EAAAA,EAAAA,GAAAmH,8BACL,qBAAkBnH,EAAAA,EAAAA,GAAAmH,wBACvB,YAASnH,EAAAA,EAAAA,GAAAmH,+BACH,mBAAgBnH,EAAAA,EAAAA,GAAAmH,4BAClB,aAAUnH,EAAAA,EAAAA,GAAAmH,mCACJ,oBAAiBnH,EAAAA,EAAAA,GAAAmH,wBAC3B,aAAUnH,EAAAA,EAAAA,GAAAmH,+BACJ,oBAAiBnH,EAAAA,EAAAA,GAAAmH,0BACrB,cAAWnH,EAAAA,EAAAA,GAAAmH,iCACL,qBAAkBnH,EAAAA,EAAAA,GAAAmH,4BACvB,YAASnH,EAAAA,EAAAA,GAAAmH,mCACH,mBAAgBnH,EAAAA,EAAAA,GAAAmH,sBAC3B,aAAUnH,EAAAA,EAAAA,GAAAmH,6BACJ,oBAAiBnH,EAAAA,EAAAA,GAAAmH,wBACrB,aAAUnH,EAAAA,EAAAA,GAAAmH,+BACJ,oBAAiBnH,EAAAA,EAAAA,GAAAmH,EACxC,UAAW,YAASnH,EAAAA,EAAAA,GAAAmH,aACL,eAAaA,GClDjBE,EAAQ,IAAIvW,IAQZwW,EAAc,IAAIxW,IAOf,SAAAyW,EACdC,EACAjB,GAEA,IACGiB,EAAwBrB,UAAUsB,aAAalB,EACjD,CAAC,MAAOlQ,GACP2Q,EAAOU,MAAM,aAADhQ,OACG6O,EAAUzQ,KAAI,yCAAA4B,OAAwC8P,EAAI1R,MACvEO,EAEH,CACH,CAoBM,SAAUsR,EACdpB,GAEA,IAAMqB,EAAgBrB,EAAUzQ,KAChC,GAAIwR,EAAYjW,IAAIuW,GAKlB,OAJAZ,EAAOU,MAAM,sDAADhQ,OAC4CkQ,EAAa,OAG9D,EAGTN,EAAY/V,IAAIqW,EAAerB,OAGCsB,YAAdR,EAAMS,UAAQ,IAAhC,IAAAC,EAAA1K,MAAAwK,EAAAE,EAAAzK,KAAAC,MAAkC,CAChCgK,EADYM,EAAA/V,MAC0ByU,EACvC,QAAA7I,GAAAqK,EAAA1R,EAAAqH,EAAA,SAAAqK,EAAAtK,GAAA,CAED,OAAO,CACT,CAWgB,SAAAuK,EACdR,EACA1R,GAEA,IAAMmS,EAAuBT,EAAwBrB,UAClD+B,YAAY,aACZvB,aAAa,CAAEwB,UAAU,IAI5B,OAHIF,GACGA,EAAoBG,mBAEnBZ,EAAwBrB,UAAU+B,YAAYpS,EACxD,CClFA,IAAMuS,GAAMC,EAAA,IAAAtI,EAAAA,EAAAA,GAAAsI,EACV,SACE,+EAC4BtI,EAAAA,EAAAA,GAAAsI,EAC9B,eAAyB,kCAA+BtI,EAAAA,EAAAA,GAAAsI,EACxD,gBACE,oFAAiFtI,EAAAA,EAAAA,GAAAsI,EACnF,cAAwB,oDAAiDtI,EAAAA,EAAAA,GAAAsI,EACzE,aACE,4EAAyEtI,EAAAA,EAAAA,GAAAsI,EAC3E,uBACE,+EACwBtI,EAAAA,EAAAA,GAAAsI,EAC1B,uBACE,0DAAuDtI,EAAAA,EAAAA,GAAAsI,EACzD,WACE,kFAA+EtI,EAAAA,EAAAA,GAAAsI,EACjF,UACE,uFAAoFtI,EAAAA,EAAAA,GAAAsI,EACtF,UACE,qFAAkFtI,EAAAA,EAAAA,GAAAsI,EACpF,aACE,uFAAqFA,GAe5EC,EAAgB,IAAI9N,EAAAA,GAC/B,MACA,WACA4N,GC5CWG,EAAe,WAc1B,SAAAA,EACEC,EACAjQ,EACA2N,GAA6B,IAAAvQ,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAA2S,GANvB,KAAUE,YAAG,EAQnBhX,KAAKiX,SAAgB/W,OAAAgX,OAAA,GAAAH,GACrB/W,KAAKmX,QAAejX,OAAAgX,OAAA,GAAApQ,GACpB9G,KAAKoX,MAAQtQ,EAAO1C,KACpBpE,KAAKqX,gCACHvQ,EAAOwQ,+BACTtX,KAAKuX,WAAa9C,EAClBzU,KAAKyU,UAAUsB,aACb,IAAIyB,EAAAA,GAAU,OAAO,kBAAMtT,CAAI,cAiDlC,OA/CAG,EAAAA,EAAAA,GAAAyS,EAAA,EAAAzP,IAAA,iCAAAzH,IAED,WAEE,OADAI,KAAKyX,iBACEzX,KAAKqX,iCACbxX,IAED,SAAmCwP,GACjCrP,KAAKyX,iBACLzX,KAAKqX,gCAAkChI,IACxC,CAAAhI,IAAA,OAAAzH,IAED,WAEE,OADAI,KAAKyX,iBACEzX,KAAKoX,QACb,CAAA/P,IAAA,UAAAzH,IAED,WAEE,OADAI,KAAKyX,iBACEzX,KAAKiX,WACb,CAAA5P,IAAA,SAAAzH,IAED,WAEE,OADAI,KAAKyX,iBACEzX,KAAKmX,UACb,CAAA9P,IAAA,YAAAzH,IAED,WACE,OAAOI,KAAKuX,aACb,CAAAlQ,IAAA,YAAAzH,IAED,WACE,OAAOI,KAAKgX,YACbnX,IAED,SAAcwP,GACZrP,KAAKgX,WAAa3H,IAGpB,CAAAhI,IAAA,iBAAAjH,MAIQ,WACN,GAAIJ,KAAK0X,UACP,MAAMb,EAAc1W,OAAO,cAAsB,CAAEwX,QAAS3X,KAAKoX,YAEpEN,CAAA,CA3EyB,YCyFZc,GACdX,GACc,IAAdY,EAAS5Y,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAG,CAAC,EAET8X,EAAUE,EAEW,kBAAdY,IAETA,EAAY,CAAEzT,KADDyT,IAIf,IAAM/Q,EAAM5G,OAAAgX,OAAA,CACV9S,KAAMmR,EACN+B,gCAAgC,GAC7BO,GAECzT,EAAO0C,EAAO1C,KAEpB,GAAoB,kBAATA,IAAsBA,EAC/B,MAAMyS,EAAc1W,OAA8B,gBAChDwX,QAASxU,OAAOiB,KAMpB,GAFA2S,IAAAA,GAAYlQ,EAAAA,EAAAA,QAEPkQ,EACH,MAAMF,EAAc1W,OAAO,cAG7B,IAAM2X,EAAcnC,EAAM/V,IAAIwE,GAC9B,GAAI0T,EAAa,CAEf,IACEpO,EAAAA,EAAAA,IAAUqN,EAASe,EAAYf,WAC/BrN,EAAAA,EAAAA,IAAU5C,EAAQgR,EAAYhR,QAE9B,OAAOgR,EAEP,MAAMjB,EAAc1W,OAA+B,iBAAEwX,QAASvT,GAEjE,CAED,IAC4C2T,EADtCtD,EAAY,IAAIuD,EAAAA,GAAmB5T,GAAM6T,GAAA7M,EAAAA,EAAAA,GACvBwK,EAAYQ,UAAQ,IAA5C,IAAA6B,EAAAtM,MAAAoM,EAAAE,EAAArM,KAAAC,MAA8C,KAAnCgJ,EAASkD,EAAA3X,MAClBqU,EAAUsB,aAAalB,EACxB,QAAA7I,GAAAiM,EAAAtT,EAAAqH,EAAA,SAAAiM,EAAAlM,GAAA,CAED,IAAMmM,EAAS,IAAIpB,EAAgBC,EAASjQ,EAAQ2N,GAIpD,OAFAkB,EAAM9V,IAAIuE,EAAM8T,GAETA,CACT,CA+BgB,SAAAC,KAAwC,IAAjC/T,EAAAnF,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAesW,EAC9BO,EAAMH,EAAM/V,IAAIwE,GACtB,IAAK0R,GAAO1R,IAASmR,IAAsB1O,EAAAA,EAAAA,MACzC,OAAO+Q,KAET,IAAK9B,EACH,MAAMe,EAAc1W,OAAwB,UAAEwX,QAASvT,IAGzD,OAAO0R,CACT,UAgDgBsC,GACdC,EACAlD,EACAmD,SAIIpD,EAAmD,QAAzC9O,EAAAoP,EAAoB6C,UAAqB,IAAAjS,EAAAA,EAAAiS,EACnDC,IACFpD,GAAW,IAAJlP,OAAQsS,IAEjB,IAAMC,EAAkBrD,EAAQvP,MAAM,SAChC6S,EAAkBrD,EAAQxP,MAAM,SACtC,GAAI4S,GAAmBC,EAAiB,CACtC,IAAMC,EAAU,CAAC,+BAADzS,OACiBkP,EAAO,oBAAAlP,OAAmBmP,EAAO,OAgBlE,OAdIoD,GACFE,EAAQ9Z,KAAK,iBAADqH,OACOkP,EAAO,sDAGxBqD,GAAmBC,GACrBC,EAAQ9Z,KAAK,OAEX6Z,GACFC,EAAQ9Z,KAAK,iBAADqH,OACOmP,EAAO,2DAG5BG,EAAOoD,KAAKD,EAAQ7V,KAAK,KAE1B,CACDqT,EACE,IAAIuB,EAAAA,GAAU,GAADxR,OACRkP,EAAO,aACV,iBAAO,CAAEA,QAAAA,EAASC,QAAAA,EAAS,GAAC,WAIlC,CCpRA,IAAMwD,GAAU,8BACVC,GAAa,EACbC,GAAa,2BASfC,GAAiD,KACrD,SAASC,KAoBP,OAnBKD,KACHA,GR5BJ,SAAgB1U,EAAM+Q,GAA0D,IAAA6D,EAAA/Z,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAA5Cga,EAAOD,EAAPC,QAASC,EAAOF,EAAPE,QAASC,EAAQH,EAARG,SAAUC,EAAUJ,EAAVI,WACnDtR,EAAUJ,UAAUK,KAAK3D,EAAM+Q,GAC/BkE,EAAcnI,EAAKpJ,GAoBzB,OAnBIoR,GACApR,EAAQsK,iBAAiB,iBAAiB,SAACkH,GACvCJ,EAAQhI,EAAKpJ,EAAQG,QAASqR,EAAMC,WAAYD,EAAME,WAAYtI,EAAKpJ,EAAQwJ,aAAcgI,EACjG,IAEAL,GACAnR,EAAQsK,iBAAiB,WAAW,SAACkH,GAAK,OAAKL,EAE/CK,EAAMC,WAAYD,EAAME,WAAYF,EAAM,IAE9CD,EACK3G,MAAK,SAAC+G,GACHL,GACAK,EAAGrH,iBAAiB,SAAS,kBAAMgH,GAAY,IAC/CD,GACAM,EAAGrH,iBAAiB,iBAAiB,SAACkH,GAAK,OAAKH,EAASG,EAAMC,WAAYD,EAAME,WAAYF,EAAM,GAE3G,IACK9R,OAAM,WAAQ,IACZ6R,CACX,CQKgBK,CAAcf,GAASC,GAAY,CAC7CM,QAAS,SAACO,EAAIF,GAMZ,GACO,IADCA,EAEJE,EAAGE,kBAAkBd,OAG1BrR,OAAM,SAAA7C,GACP,MAAMkS,EAAc1W,OAA0B,YAC5CyZ,qBAAsBjV,EAAE2D,SAE5B,KAEKwQ,EACT,CAAC,SAEqBe,GAA2BC,GAAA,OAAAC,GAAAnb,MAAC,KAADK,UAAA,UAAA8a,KAoBhD,OApBgDA,IAAA1G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1C,SAAAyG,EACLlE,GAAgB,IAAA2D,EAAAxR,EAAAgS,EAAA,OAAA3G,EAAAA,EAAAA,KAAApC,MAAA,SAAAgJ,GAAA,cAAAA,EAAArG,KAAAqG,EAAA9N,MAAA,cAAA8N,EAAArG,KAAA,EAAAqG,EAAA9N,KAAA,EAGG2M,KAAc,OAAvB,OAAFU,EAAES,EAAA/F,KAAA+F,EAAA9N,KAAG,EACUqN,EAClBnI,YAAYuH,IACZ5H,YAAY4H,IACZjZ,IAAIua,GAAWrE,IAAK,OAHX,OAAN7N,EAAMiS,EAAA/F,KAAA+F,EAAAhG,OAAA,SAILjM,GAAM,QAAAiS,EAAArG,KAAA,GAAAqG,EAAAE,GAAAF,EAAA,SAETA,EAAAE,cAAa7R,EAAAA,GACf+M,EAAOoD,KAAKwB,EAAAE,GAAE9R,UAER2R,EAAcpD,EAAc1W,OAAyB,WACzDyZ,qBAAkC,OAAXM,EAAAE,SAAA,IAAAF,EAAAE,QAAA,EAAAF,EAAAE,GAAa9R,UAEtCgN,EAAOoD,KAAKuB,EAAY3R,UACzB,yBAAA4R,EAAA9F,OAAA,GAAA4F,EAAA,oBAEJpb,MAAA,KAAAK,UAAA,UAEqBob,GAA0BC,EAAAC,GAAA,OAAAC,GAAA5b,MAAC,KAADK,UAAA,UAAAub,KAoB/C,OApB+CA,IAAAnH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzC,SAAAkH,EACL3E,EACA4E,GAAsC,IAAAjB,EAAA5H,EAAAZ,EAAAgJ,EAAA,OAAA3G,EAAAA,EAAAA,KAAApC,MAAA,SAAAyJ,GAAA,cAAAA,EAAA9G,KAAA8G,EAAAvO,MAAA,cAAAuO,EAAA9G,KAAA,EAAA8G,EAAAvO,KAAA,EAGnB2M,KAAc,OAEe,OAFxCU,EAAEkB,EAAAxG,KACFtC,EAAK4H,EAAGnI,YAAYuH,GAAY,aAChC5H,EAAcY,EAAGZ,YAAY4H,IAAW8B,EAAAvO,KAAA,EACxC6E,EAAY2J,IAAIF,EAAiBP,GAAWrE,IAAK,cAAA6E,EAAAvO,KAAA,GACjDyF,EAAGhG,KAAI,QAAA8O,EAAAvO,KAAA,iBAAAuO,EAAA9G,KAAA,GAAA8G,EAAAP,GAAAO,EAAA,SAETA,EAAAP,cAAa7R,EAAAA,GACf+M,EAAOoD,KAAKiC,EAAAP,GAAE9R,UAER2R,EAAcpD,EAAc1W,OAA2B,WAC3DyZ,qBAAkC,OAAXe,EAAAP,SAAA,IAAAO,EAAAP,QAAA,EAAAO,EAAAP,GAAa9R,UAEtCgN,EAAOoD,KAAKuB,EAAY3R,UACzB,yBAAAqS,EAAAvG,OAAA,GAAAqG,EAAA,oBAEJ7b,MAAA,KAAAK,UAAA,CAED,SAASkb,GAAWrE,GAClB,MAAO,GAAP9P,OAAU8P,EAAI1R,KAAI,KAAA4B,OAAI8P,EAAIiB,QAAQ8D,MACpC,CCrEA,IAIaC,GAAoB,WAyB/B,SAAAA,EAA6BrG,GAA6B,IAAAzN,EAAA,MAAA7C,EAAAA,EAAAA,GAAA,KAAA2W,GAA7B,KAASrG,UAATA,EAT7B,KAAgBsG,iBAAiC,KAU/C,IAAMjF,EAAM9V,KAAKyU,UAAU+B,YAAY,OAAOvB,eAC9CjV,KAAKgb,SAAW,IAAIC,GAAqBnF,GACzC9V,KAAKkb,wBAA0Blb,KAAKgb,SAASG,OAAOzI,MAAK,SAAAzK,GAEvD,OADAjB,EAAK+T,iBAAmB9S,EACjBA,CACT,IAuFD,OApFD5D,EAAAA,EAAAA,GAAAyW,EAAA,EAAAzT,IAAA,mBAAAjH,MAAA,eAAAgb,GAAA/H,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAOA,SAAAC,IAAA,IAAA6H,EAAAC,EAAAC,EAAA,OAAAjI,EAAAA,EAAAA,KAAApC,MAAA,SAAA0C,GAAA,cAAAA,EAAAC,KAAAD,EAAAxH,MAAA,OAQiC,GAPzBiP,EAAiBrb,KAAKyU,UACzB+B,YAAY,mBACZvB,eAIGqG,EAAQD,EAAeG,wBACvBD,EAAOE,KACiB,OAA1Bzb,KAAK+a,iBAAyB,CAAAnH,EAAAxH,KAAA,eAAAwH,EAAAxH,KAAA,EACFpM,KAAKkb,wBAAuB,OAA1Dlb,KAAK+a,iBAAgBnH,EAAAO,KAAA,UAKrBnU,KAAK+a,iBAAiBW,wBAA0BH,IAChDvb,KAAK+a,iBAAiBY,WAAWtL,MAC/B,SAAAuL,GAAmB,OAAIA,EAAoBL,OAASA,CAAI,IACzD,CAAA3H,EAAAxH,KAAA,gBAAAwH,EAAAM,OAAA,kBAKDlU,KAAK+a,iBAAiBY,WAAWhd,KAAK,CAAE4c,KAAAA,EAAMD,MAAAA,IAAS,QASvD,OANFtb,KAAK+a,iBAAiBY,WAAa3b,KAAK+a,iBAAiBY,WAAWvG,QAClE,SAAAwG,GACE,IAAMC,EAAc,IAAIlN,KAAKiN,EAAoBL,MAAMpO,UAEvD,OADYwB,KAAKD,MACJmN,GAzEyB,MA0ExC,IACAjI,EAAAM,OAAA,SACKlU,KAAKgb,SAASc,UAAU9b,KAAK+a,mBAAiB,yBAAAnH,EAAAQ,OAAA,GAAAZ,EAAA,UACtD,yBAAA4H,EAAAxc,MAAA,KAAAK,UAAA,EAzCD,IA2CA,CAAAoI,IAAA,sBAAAjH,MAAA,eAAA2b,GAAA1I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAOA,SAAAyI,IAAA,IAAAT,EAAAU,EAAAC,EAAAC,EAAAC,EAAA,OAAA9I,EAAAA,EAAAA,KAAApC,MAAA,SAAAmL,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAjQ,MAAA,UACgC,OAA1BpM,KAAK+a,iBAAyB,CAAAsB,EAAAjQ,KAAA,eAAAiQ,EAAAjQ,KAAA,EAC1BpM,KAAKkb,wBAAuB,UAIR,OAA1Blb,KAAK+a,kBACuC,IAA5C/a,KAAK+a,iBAAiBY,WAAW9a,OAAY,CAAAwb,EAAAjQ,KAAA,eAAAiQ,EAAAnI,OAAA,SAEtC,IAAE,OAWwC,GAT7CqH,EAAOE,OAE+Ba,GAC1Ctc,KAAK+a,iBAAiBY,YADhBO,EAAgBD,EAAhBC,iBAAkBC,EAAaF,EAAbE,cAGpBC,GAAe9X,EAAAA,EAAAA,GACnBiB,KAAKgX,UAAU,CAAEpH,QAAS,EAAGwG,WAAYO,KAG3Clc,KAAK+a,iBAAiBW,sBAAwBH,IAC1CY,EAActb,OAAS,GAAC,CAAAwb,EAAAjQ,KAAA,gBAE1BpM,KAAK+a,iBAAiBY,WAAaQ,YAI7Bnc,KAAKgb,SAASc,UAAU9b,KAAK+a,kBAAiB,QAAAsB,EAAAjQ,KAAA,iBAEpDpM,KAAK+a,iBAAiBY,WAAa,GAE9B3b,KAAKgb,SAASc,UAAU9b,KAAK+a,kBAAkB,eAAAsB,EAAAnI,OAAA,SAE/CkI,GAAY,yBAAAC,EAAAjI,OAAA,GAAA4H,EAAA,UACpB,yBAAAD,EAAAnd,MAAA,KAAAK,UAAA,EAzCD,MAyCC6b,CAAA,CAtH8B,GAyHjC,SAASW,KAGP,OAFc,IAAI9M,MAELC,cAAchI,UAAU,EAAG,GAC1C,UAEgB0V,GACdE,GAC0B,IAUuBC,EAVjDC,EAAOzd,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GArIgB,KA4IjBid,EAA4C,GAE9CC,EAAgBK,EAAgBG,QAAQC,GAAAxR,EAAAA,EAAAA,GACVoR,GAAe,QAAAK,EAAA,WAAE,IAAxCjB,EAAmBa,EAAArc,MAEtB0c,EAAiBZ,EAAiBa,MACtC,SAAAC,GAAE,OAAIA,EAAG1B,QAAUM,EAAoBN,KAAK,IAE9C,GAAKwB,GAgBH,GAHAA,EAAeG,MAAMte,KAAKid,EAAoBL,MAG1C2B,GAAWhB,GAAoBQ,EACN,OAA3BI,EAAeG,MAAME,MAAM,aAX7B,GAJAjB,EAAiBvd,KAAK,CACpB2c,MAAOM,EAAoBN,MAC3B2B,MAAO,CAACrB,EAAoBL,QAE1B2B,GAAWhB,GAAoBQ,EAGV,OAAvBR,EAAiBiB,MAAM,QAc3BhB,EAAgBA,EAAcQ,MAAM,EACrC,EA7BD,IAAAC,EAAAjR,MAAA8Q,EAAAG,EAAAhR,KAAAC,MAAA,cAAAgR,IAeM,KAAM,CAcX,OAAA7Q,GAAA4Q,EAAAjY,EAAAqH,EAAA,SAAA4Q,EAAA7Q,GAAA,CACD,MAAO,CACLmQ,iBAAAA,EACAC,cAAAA,EAEJ,CAAC,IC7LsC7D,GD+L1B2C,GAAoB,WAE/B,SAAAA,EAAmBnF,IAAgB3R,EAAAA,EAAAA,GAAA,KAAA8W,GAAhB,KAAGnF,IAAHA,EACjB9V,KAAKod,wBAA0Bpd,KAAKqd,+BAuDrC,OAtDAhZ,EAAAA,EAAAA,GAAA4W,EAAA,EAAA5T,IAAA,+BAAAjH,MAAA,eAAAkd,GAAAjK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAgK,IAAA,OAAAjK,EAAAA,EAAAA,KAAApC,MAAA,SAAAsM,GAAA,cAAAA,EAAA3J,KAAA2J,EAAApR,MAAA,WACO3E,EAAAA,EAAAA,MAAwB,CAAF+V,EAAApR,KAAA,eAAAoR,EAAAtJ,OAAA,UAClB,GAAK,cAAAsJ,EAAAtJ,OAAA,UAELvM,EAAAA,EAAAA,MACJ+K,MAAK,kBAAM,CAAI,IACflL,OAAM,kBAAM,CAAK,KAAC,wBAAAgW,EAAApJ,OAAA,GAAAmJ,EAAA,KAExB,yBAAAD,EAAA1e,MAAA,KAAAK,UAAA,EATA,IAUD,CAAAoI,IAAA,OAAAjH,MAAA,eAAAqd,GAAApK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAGA,SAAAmK,IAAA,IAAAC,EAAA,OAAArK,EAAAA,EAAAA,KAAApC,MAAA,SAAA0M,GAAA,cAAAA,EAAA/J,KAAA+J,EAAAxR,MAAA,cAAAwR,EAAAxR,KAAA,EACgCpM,KAAKod,wBAAuB,OAArC,GAAAQ,EAAAzJ,KACC,CAAFyJ,EAAAxR,KAAA,eAAAwR,EAAA1J,OAAA,SACX,CAAEyH,WAAY,KAAI,cAAAiC,EAAAxR,KAAA,EAEQyN,GAA4B7Z,KAAK8V,KAAI,OAA9C,OAAlB6H,EAAkBC,EAAAzJ,KAAAyJ,EAAA1J,OAAA,SACjByJ,GAAsB,CAAEhC,WAAY,KAAI,yBAAAiC,EAAAxJ,OAAA,GAAAsJ,EAAA,UAElD,yBAAAD,EAAA7e,MAAA,KAAAK,UAAA,EAXD,oEAaA,SAAA4e,EAAgBC,GAAuC,IAAA1X,EAAA2X,EAAA,OAAAzK,EAAAA,EAAAA,KAAApC,MAAA,SAAA8M,GAAA,cAAAA,EAAAnK,KAAAmK,EAAA5R,MAAA,cAAA4R,EAAA5R,KAAA,EACvBpM,KAAKod,wBAAuB,OAArC,GAAAY,EAAA7J,KACC,CAAF6J,EAAA5R,KAAA,eAAA4R,EAAA9J,OAAA,wBAAA8J,EAAA5R,KAAA,EAGqBpM,KAAKmb,OAAM,OAApB,OAAxB4C,EAAwBC,EAAA7J,KAAA6J,EAAA9J,OAAA,SACvBmG,GAA2Bra,KAAK8V,IAAK,CAC1C4F,sBAEE,QADAtV,EAAA0X,EAAiBpC,6BACjB,IAAAtV,EAAAA,EAAA2X,EAAyBrC,sBAC3BC,WAAYmC,EAAiBnC,cAC7B,yBAAAqC,EAAA5J,OAAA,GAAAyJ,EAAA,UAEL,gBAAAI,GAAA,OAAAC,EAAAtf,MAAA,KAAAK,UAAA,gEAED,SAAAkf,EAAUL,GAAuC,IAAA1X,EAAA2X,EAAA,OAAAzK,EAAAA,EAAAA,KAAApC,MAAA,SAAAkN,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAhS,MAAA,cAAAgS,EAAAhS,KAAA,EACjBpM,KAAKod,wBAAuB,OAArC,GAAAgB,EAAAjK,KACC,CAAFiK,EAAAhS,KAAA,eAAAgS,EAAAlK,OAAA,wBAAAkK,EAAAhS,KAAA,EAGqBpM,KAAKmb,OAAM,OAApB,OAAxB4C,EAAwBK,EAAAjK,KAAAiK,EAAAlK,OAAA,SACvBmG,GAA2Bra,KAAK8V,IAAK,CAC1C4F,sBAEE,QADAtV,EAAA0X,EAAiBpC,6BACjB,IAAAtV,EAAAA,EAAA2X,EAAyBrC,sBAC3BC,WAAY,GAAF3V,QAAAoH,EAAAA,EAAAA,GACL2Q,EAAyBpC,aAAUvO,EAAAA,EAAAA,GACnC0Q,EAAiBnC,gBAEtB,yBAAAyC,EAAAhK,OAAA,GAAA+J,EAAA,UAEL,gBAAAE,GAAA,OAAAC,EAAA1f,MAAA,KAAAK,UAAA,QAAAgc,CAAA,CA1D8B,GAkE3B,SAAUiC,GAAWV,GAEzB,OAAOlY,EAAAA,EAAAA,GAELiB,KAAKgX,UAAU,CAAEpH,QAAS,EAAGwG,WAAYa,KACzC3b,MACJ,CCvQuCyX,GCMhB,GDLrBrC,EACE,IAAIuB,EAAAA,GACF,mBACA,SAAA/C,GAAS,OAAI,IAAID,EAA0BC,EAAU,eAIzDwB,EACE,IAAIuB,EAAAA,GACF,aACA,SAAA/C,GAAS,OAAI,IAAIqG,GAAqBrG,EAAU,eAMpD2D,GAAgB1C,EAAM6I,EAASjG,IAE/BF,GAAgB1C,EAAM6I,EAAS,WAE/BnG,GAAgB,UAAW,sKEjBhBZ,EAAS,WAiBpB,SAAAA,EACWpT,EACAoa,EACAzJ,IAAmB5Q,EAAAA,EAAAA,GAAA,KAAAqT,GAFnB,KAAIpT,KAAJA,EACA,KAAeoa,gBAAfA,EACA,KAAIzJ,KAAJA,EAnBX,KAAiB0J,mBAAG,EAIpB,KAAYC,aAAe,CAAC,EAE5B,KAAAC,kBAA2C,OAE3C,KAAiBC,kBAAwC,KAgCxD,OApBGva,EAAAA,EAAAA,GAAAmT,EAAA,EAAAnQ,IAAA,uBAAAjH,MAEJ,SAAqBye,GAEnB,OADA7e,KAAK2e,kBAAoBE,EAClB7e,OACR,CAAAqH,IAAA,uBAAAjH,MAED,SAAqBqe,GAEnB,OADAze,KAAKye,kBAAoBA,EAClBze,OACR,CAAAqH,IAAA,kBAAAjH,MAED,SAAgB2K,GAEd,OADA/K,KAAK0e,aAAe3T,EACb/K,OACR,CAAAqH,IAAA,6BAAAjH,MAED,SAA2BkH,GAEzB,OADAtH,KAAK4e,kBAAoBtX,EAClBtH,SACRwX,CAAA,CAzCmB,GCXTjC,EAAqB,YCgBrBuJ,EAAQ,WAWnB,SAAAA,EACmB1a,EACAqQ,IAA6BtQ,EAAAA,EAAAA,GAAA,KAAA2a,GAD7B,KAAI1a,KAAJA,EACA,KAASqQ,UAATA,EAZX,KAASI,UAAwB,KACxB,KAAAlH,UAAgD,IAAIvO,IACpD,KAAA2f,kBAGb,IAAI3f,IACS,KAAA4f,iBACf,IAAI5f,IACE,KAAA6f,gBAAuD,IAAI7f,IAqUlE,OA9TDiF,EAAAA,EAAAA,GAAAya,EAAA,EAAAzX,IAAA,MAAAjH,MAIA,SAAI8e,GAEF,IAAMC,EAAuBnf,KAAKof,4BAA4BF,GAE9D,IAAKlf,KAAK+e,kBAAkBpf,IAAIwf,GAAuB,CACrD,IAAME,EAAW,IAAItY,EAAAA,GAGrB,GAFA/G,KAAK+e,kBAAkBlf,IAAIsf,EAAsBE,GAG/Crf,KAAKsf,cAAcH,IACnBnf,KAAKuf,uBAGL,IACE,IAAM1gB,EAAWmB,KAAKwf,uBAAuB,CAC3CC,mBAAoBN,IAElBtgB,GACFwgB,EAASnY,QAAQrI,EAEpB,CAAC,MAAO8F,IAKZ,CAED,OAAO3E,KAAK+e,kBAAkBnf,IAAIuf,GAAuBhY,UAC1D,CAAAE,IAAA,eAAAjH,MAkBD,SAAa2W,SAKLoI,EAAuBnf,KAAKof,4BAChC,OAAArI,QAAA,IAAAA,OAAA,EAAAA,EAASmI,YAELzI,EAAgC,QAArBrQ,EAAA,OAAA2Q,QAAA,IAAAA,OAAA,EAAAA,EAASN,gBAAY,IAAArQ,GAAAA,EAEtC,IACEpG,KAAKsf,cAAcH,KACnBnf,KAAKuf,uBAaA,CAEL,GAAI9I,EACF,OAAO,KAEP,MAAM1U,MAAM,WAADiE,OAAYhG,KAAKoE,KAAI,qBAEnC,CAlBC,IACE,OAAOpE,KAAKwf,uBAAuB,CACjCC,mBAAoBN,GAEvB,CAAC,MAAOxa,GACP,GAAI8R,EACF,OAAO,KAEP,MAAM9R,CAET,IASJ,CAAA0C,IAAA,eAAAjH,MAED,WACE,OAAOJ,KAAK6U,YACb,CAAAxN,IAAA,eAAAjH,MAED,SAAayU,GACX,GAAIA,EAAUzQ,OAASpE,KAAKoE,KAC1B,MAAMrC,MAAM,yBAADiE,OACgB6O,EAAUzQ,KAAI,kBAAA4B,OAAiBhG,KAAKoE,KAAI,MAIrE,GAAIpE,KAAK6U,UACP,MAAM9S,MAAM,iBAADiE,OAAkBhG,KAAKoE,KAAI,+BAMxC,GAHApE,KAAK6U,UAAYA,EAGZ7U,KAAKuf,uBAAV,CAKA,GA0NJ,SAA0C1K,GACxC,MAAuC,UAAhCA,EAAU8J,iBACnB,CA5NQe,CAAiB7K,GACnB,IACE7U,KAAKwf,uBAAuB,CAAEC,mBAAoBlK,GACnD,CAAC,MAAO5Q,QAc0BwR,YAAhCnW,KAAK+e,kBAAkBY,WAAS,IAHrC,IAAAtJ,EAAA1K,MAAAwK,EAAAE,EAAAzK,KAAAC,MAGuC,KAAA+T,GAAAC,EAAAA,EAAAA,GAAA1J,EAAA/V,MAAA,GAFrCqf,EAAkBG,EAAA,GAClBE,EAAgBF,EAAA,GAEVT,EACJnf,KAAKof,4BAA4BK,GAEnC,IAEE,IAAM5gB,EAAWmB,KAAKwf,uBAAuB,CAC3CC,mBAAoBN,IAEtBW,EAAiB5Y,QAAQrI,EAC1B,CAAC,MAAO8F,IAIV,QAAAqH,GAAAqK,EAAA1R,EAAAqH,EAAA,SAAAqK,EAAAtK,GAAA,CAlCA,IAmCF,CAAA1E,IAAA,gBAAAjH,MAED,WAAqD,IAAvC8e,EAAAjgB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAqBsW,EACjCvV,KAAK+e,kBAAkBgB,OAAOb,GAC9Blf,KAAKgf,iBAAiBe,OAAOb,GAC7Blf,KAAK2N,UAAUoS,OAAOb,kEAKxB,SAAA1L,IAAA,IAAAwM,EAAA,OAAA1M,EAAAA,EAAAA,KAAApC,MAAA,SAAA0C,GAAA,cAAAA,EAAAC,KAAAD,EAAAxH,MAAA,OACsD,OAA9C4T,EAAWne,MAAM2L,KAAKxN,KAAK2N,UAAUyI,UAASxC,EAAAxH,KAAA,EAE9ChF,QAAQ6M,IAAI,GAADjO,QAAAoH,EAAAA,EAAAA,GACZ4S,EACA5K,QAAO,SAAApM,GAAO,MAAI,aAAcA,CAAO,IAEvC2L,KAAI,SAAA3L,GAAO,OAAKA,EAAgBiX,SAAUF,QAAQ,MAAC3S,EAAAA,EAAAA,GACnD4S,EACA5K,QAAO,SAAApM,GAAO,MAAI,YAAaA,CAAO,IAEtC2L,KAAI,SAAA3L,GAAO,OAAKA,EAAgBkX,SAAS,OAC5C,wBAAAtM,EAAAQ,OAAA,GAAAZ,EAAA,UACH,yBAAA2M,EAAAvhB,MAAA,KAAAK,UAAA,OAAAoI,IAAA,iBAAAjH,MAED,WACE,OAAyB,MAAlBJ,KAAK6U,YACb,CAAAxN,IAAA,gBAAAjH,MAED,WAAqD,IAAvC8e,EAAAjgB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAqBsW,EACjC,OAAOvV,KAAK2N,UAAUhO,IAAIuf,KAC3B,CAAA7X,IAAA,aAAAjH,MAED,WAAkD,IAAvC8e,EAAAjgB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAqBsW,EAC9B,OAAOvV,KAAKgf,iBAAiBpf,IAAIsf,IAAe,CAAC,IAClD,CAAA7X,IAAA,aAAAjH,MAED,WAAuC,IAA5BggB,EAAAnhB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAA0B,CAAC,EACpCohB,EAAyBD,EAAjBrJ,QAAAA,OAAO,IAAAsJ,EAAG,CAAC,EAACA,EACdlB,EAAuBnf,KAAKof,4BAChCgB,EAAKX,oBAEP,GAAIzf,KAAKsf,cAAcH,GACrB,MAAMpd,MAAM,GAADiE,OACNhG,KAAKoE,KAAI,KAAA4B,OAAImZ,EAAoB,mCAIxC,IAAKnf,KAAKsgB,iBACR,MAAMve,MAAM,aAADiE,OAAchG,KAAKoE,KAAI,iCAGpC,IASqC2T,EAT/BlZ,EAAWmB,KAAKwf,uBAAuB,CAC3CC,mBAAoBN,EACpBpI,QAAAA,cAOG/W,KAAK+e,kBAAkBY,WAAS,IAHrC,IAAA1H,EAAAtM,MAAAoM,EAAAE,EAAArM,KAAAC,MAGuC,KAAA0U,GAAAV,EAAAA,EAAAA,GAAA9H,EAAA3X,MAAA,GAFrCqf,EAAkBc,EAAA,GAClBT,EAAgBS,EAAA,GAIZpB,IADFnf,KAAKof,4BAA4BK,IAEjCK,EAAiB5Y,QAAQrI,EAE5B,QAAAmN,GAAAiM,EAAAtT,EAAAqH,EAAA,SAAAiM,EAAAlM,GAAA,CAED,OAAOlN,IAGT,CAAAwI,IAAA,SAAAjH,MAQA,SAAOkH,EAA6B4X,SAC5BC,EAAuBnf,KAAKof,4BAA4BF,GACxDsB,EAC0C,QAA9Cpa,EAAApG,KAAKif,gBAAgBrf,IAAIuf,UAAqB,IAAA/Y,EAAAA,EAC9C,IAAIqa,IACND,EAAkBE,IAAIpZ,GACtBtH,KAAKif,gBAAgBpf,IAAIsf,EAAsBqB,GAE/C,IAAMG,EAAmB3gB,KAAK2N,UAAU/N,IAAIuf,GAK5C,OAJIwB,GACFrZ,EAASqZ,EAAkBxB,GAGtB,WACLqB,EAAkBT,OAAOzY,EAC3B,IAGF,CAAAD,IAAA,wBAAAjH,MAIQ,SACNvB,EACAqgB,GAEA,IAAM0B,EAAY5gB,KAAKif,gBAAgBrf,IAAIsf,GAC3C,GAAK0B,EAAL,CAEC,IAC+BnE,EAD/BG,GAAAxR,EAAAA,EAAAA,GACsBwV,GAAS,IAAhC,IAAAhE,EAAAjR,MAAA8Q,EAAAG,EAAAhR,KAAAC,MAAkC,KAAvBvE,EAAQmV,EAAArc,MACjB,IACEkH,EAASzI,EAAUqgB,EACpB,CAAC,MAAM9Y,IAGT,QAAA4F,GAAA4Q,EAAAjY,EAAAqH,EAAA,SAAA4Q,EAAA7Q,GAAA,CAPA,IAQF,CAAA1E,IAAA,yBAAAjH,MAEO,SAAA4Y,GAMP,IAyDoCkG,EA9DnCO,EAAkBzG,EAAlByG,mBAAkBoB,EAAA7H,EAClBjC,QAAAA,OAAO,IAAA8J,EAAG,CAAC,EAACA,EAKRhiB,EAAWmB,KAAK2N,UAAU/N,IAAI6f,GAClC,IAAK5gB,GAAYmB,KAAK6U,YACpBhW,EAAWmB,KAAK6U,UAAU2J,gBAAgBxe,KAAKyU,UAAW,CACxDgL,oBAqD+BP,EArDmBO,EAsDjDP,IAAe3J,OAAqBlW,EAAY6f,GArDjDnI,QAAAA,IAEF/W,KAAK2N,UAAU9N,IAAI4f,EAAoB5gB,GACvCmB,KAAKgf,iBAAiBnf,IAAI4f,EAAoB1I,GAO9C/W,KAAK8gB,sBAAsBjiB,EAAU4gB,GAOjCzf,KAAK6U,UAAU+J,mBACjB,IACE5e,KAAK6U,UAAU+J,kBACb5e,KAAKyU,UACLgL,EACA5gB,EAEH,CAAC,MAAMuH,IAMZ,OAAOvH,GAAY,OACpB,CAAAwI,IAAA,8BAAAjH,MAEO,WACiC,IAAvC8e,EAAAjgB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAAqBsW,EAErB,OAAIvV,KAAK6U,UACA7U,KAAK6U,UAAU4J,kBAAoBS,EAAa3J,EAEhD2J,IAEV,CAAA7X,IAAA,uBAAAjH,MAEO,WACN,QACIJ,KAAK6U,WAC8B,aAArC7U,KAAK6U,UAAU8J,sBAElBG,CAAA,CA9UkB,GCZrB,IAGa9G,EAAkB,WAG7B,SAAAA,EAA6B5T,IAAYD,EAAAA,EAAAA,GAAA,KAAA6T,GAAZ,KAAI5T,KAAJA,EAFZ,KAAA2c,UAAY,IAAI3hB,IAuDhC,OAnDDiF,EAAAA,EAAAA,GAAA2T,EAAA,EAAA3Q,IAAA,eAAAjH,MASA,SAA6ByU,GAC3B,IAAMD,EAAW5U,KAAKwW,YAAY3B,EAAUzQ,MAC5C,GAAIwQ,EAAS0L,iBACX,MAAM,IAAIve,MAAM,aAADiE,OACA6O,EAAUzQ,KAAI,sCAAA4B,OAAqChG,KAAKoE,OAIzEwQ,EAASoM,aAAanM,KACvB,CAAAxN,IAAA,0BAAAjH,MAED,SAAwCyU,GACrB7U,KAAKwW,YAAY3B,EAAUzQ,MAC/Bkc,kBAEXtgB,KAAK+gB,UAAUhB,OAAOlL,EAAUzQ,MAGlCpE,KAAK+V,aAAalB,KAGpB,CAAAxN,IAAA,cAAAjH,MAOA,SAA4BgE,GAC1B,GAAIpE,KAAK+gB,UAAUphB,IAAIyE,GACrB,OAAOpE,KAAK+gB,UAAUnhB,IAAIwE,GAI5B,IAAMwQ,EAAW,IAAIkK,EAAY1a,EAAMpE,MAGvC,OAFAA,KAAK+gB,UAAUlhB,IAAIuE,EAAMwQ,GAElBA,IACR,CAAAvN,IAAA,eAAAjH,MAED,WACE,OAAOyB,MAAM2L,KAAKxN,KAAK+gB,UAAU3K,cAClC4B,CAAA,CAxD4B,4ECL/BI,EAAAA,EAAAA,wBAA+B,6LCHzB6I,EAAY,iDACZC,EAAqB,kDAE3B,SAASC,EAGP9V,EACAU,GAEA,IAAM9D,EAAqC,CAAC,EAC5C,IAAK,IAAMZ,KAAOgE,EACZA,EAAE+V,eAAe/Z,KACnBY,EAAOZ,GAAO0E,EAAEV,EAAEhE,KAGtB,OAAOY,CACT,CAQM,SAAUoZ,EAAOhY,GACrB,GAAY,MAARA,EACF,OAAO,KAKT,GAHIA,aAAgBiY,SAClBjY,EAAOA,EAAK8D,WAEM,kBAAT9D,GAAqBkY,SAASlY,GAGvC,OAAOA,EAET,IAAa,IAATA,IAA0B,IAATA,EACnB,OAAOA,EAET,GAA6C,oBAAzCnJ,OAAOlB,UAAUO,SAASC,KAAK6J,GACjC,OAAOA,EAET,GAAIA,aAAgBsF,KAClB,OAAOtF,EAAKuF,cAEd,GAAI/M,MAAMC,QAAQuH,GAChB,OAAOA,EAAKsL,KAAI,SAAA6M,GAAC,OAAIH,EAAOG,EAAE,IAEhC,GAAoB,oBAATnY,GAAuC,kBAATA,EACvC,OAAO8X,EAAU9X,GAAO,SAAAmY,GAAC,OAAIH,EAAOG,EAAE,IAGxC,MAAM,IAAIzf,MAAM,mCAAqCsH,EACvD,CAQM,SAAUoY,EAAOC,GACrB,GAAY,MAARA,EACF,OAAOA,EAET,GAAKA,EAAoC,SACvC,OAASA,EAAoC,UAC3C,KAAKT,EAEL,KAAKC,EAIH,IAAM9gB,EAAQkhB,OAAQI,EAA2C,OACjE,GAAIC,MAAMvhB,GACR,MAAM,IAAI2B,MAAM,qCAAuC2f,GAEzD,OAAOthB,EAET,QACE,MAAM,IAAI2B,MAAM,qCAAuC2f,GAI7D,OAAI7f,MAAMC,QAAQ4f,GACTA,EAAK/M,KAAI,SAAA6M,GAAC,OAAIC,EAAOD,EAAE,IAEZ,oBAATE,GAAuC,kBAATA,EAChCP,EAAUO,GAAO,SAAAF,GAAC,OAAIC,EAAOD,EAAE,IAGjCE,CACT,CCxFO,IAAME,EAAiB,YCUxBC,EAAuD,CAC3DC,GAAI,KACJC,UAAW,YACXC,QAAS,UACTC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,UAAW,YACXC,eAAgB,iBAChBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,QAAS,UACTC,aAAc,eACdC,cAAe,gBACf1C,SAAU,WACV2C,YAAa,cACbC,UAAW,aAOAC,EAAe,SAAAC,IAAAhf,EAAAA,EAAAA,GAAA+e,EAAAC,GAAA,IAAA/e,GAAAC,EAAAA,EAAAA,GAAA6e,GAC1B,SAAAA,EAKEpa,EACAJ,EAIS0a,GAAiB,IAAA9e,EAAA,OAAAC,EAAAA,EAAAA,GAAA,KAAA2e,IAE1B5e,EAAAF,EAAAxE,KAAA,QAAAwG,OAAS4b,EAAc,KAAA5b,OAAI0C,GAAQJ,GAAW,KAF9B0a,QAAPA,EAAiB9e,EAG3B,OAAAG,EAAAA,EAAAA,GAAAye,EAAA,CAdyB,CAAQva,EAAAA,IAgEpB,SAAA0a,EACdC,EACAC,GAEA,IAAIza,EA3CN,SAA2Bwa,GAEzB,GAAIA,GAAU,KAAOA,EAAS,IAC5B,MAAO,KAET,OAAQA,GACN,KAAK,EAiBL,KAAK,IACH,MAAO,WAfT,KAAK,IACH,MAAO,mBACT,KAAK,IACH,MAAO,kBACT,KAAK,IACH,MAAO,oBACT,KAAK,IACH,MAAO,YACT,KAAK,IACH,MAAO,UACT,KAAK,IACH,MAAO,qBACT,KAAK,IACH,MAAO,YAGT,KAAK,IACH,MAAO,gBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,oBAGX,MAAO,SACT,CASaE,CAAkBF,GAGzBG,EAAsB3a,EAEtBsa,OAAmB3jB,EAGvB,IACE,IAAMikB,EAAYH,GAAYA,EAASte,MACvC,GAAIye,EAAW,CACb,IAAMJ,EAASI,EAAUJ,OACzB,GAAsB,kBAAXA,EAAqB,CAC9B,IAAKrB,EAAaqB,GAEhB,OAAO,IAAIJ,EAAe,WAAY,YAExCpa,EAAOmZ,EAAaqB,GAIpBG,EAAcH,CACf,CAED,IAAM5a,EAAUgb,EAAUhb,QACH,kBAAZA,IACT+a,EAAc/a,QAIAjJ,KADhB2jB,EAAUM,EAAUN,WAElBA,EAAUvB,EAAOuB,GAEpB,CACF,CAAC,MAAOre,IAIT,MAAa,OAAT+D,EAIK,KAGF,IAAIoa,EAAepa,EAAM2a,EAAaL,EAC/C,CC/HA,IAIaO,EAAe,WAI1B,SAAAA,EACEC,EACAC,EACAC,GAAyD,IAAA1c,EAAA,MAAA7C,EAAAA,EAAAA,GAAA,KAAAof,GANnD,KAAII,KAAgC,KACpC,KAASC,UAA6B,KACtC,KAAQC,SAAoC,KAMlD7jB,KAAK2jB,KAAOH,EAAavO,aAAa,CAAEwB,UAAU,IAClDzW,KAAK4jB,UAAYH,EAAkBxO,aAAa,CAC9CwB,UAAU,IAGPzW,KAAK2jB,MACRH,EAAa5jB,MAAM8S,MACjB,SAAAiR,GAAI,OAAK3c,EAAK2c,KAAOA,CAAI,IACzB,eAMC3jB,KAAK4jB,WACRH,EAAkB7jB,MAAM8S,MACtB,SAAAkR,GAAS,OAAK5c,EAAK4c,UAAYA,CAAS,IACxC,eAMC5jB,KAAK6jB,UACRH,EAAiB9jB,MAAM8S,MACrB,SAAAmR,GAAQ,OAAK7c,EAAK6c,SAAWA,CAAQ,IACrC,eA4DL,OAvDAxf,EAAAA,EAAAA,GAAAkf,EAAA,EAAAlc,IAAA,eAAAjH,MAAA,eAAA0jB,GAAAzQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAC,IAAA,IAAAuQ,EAAA,OAAAzQ,EAAAA,EAAAA,KAAApC,MAAA,SAAA0C,GAAA,cAAAA,EAAAC,KAAAD,EAAAxH,MAAA,UACOpM,KAAK2jB,KAAM,CAAF/P,EAAAxH,KAAA,eAAAwH,EAAAM,OAAA,cACL7U,GAAS,cAAAuU,EAAAC,KAAA,EAAAD,EAAAxH,KAAA,EAIIpM,KAAK2jB,KAAKK,WAAU,OAA7B,OAALD,EAAKnQ,EAAAO,KAAAP,EAAAM,OAAA,SACJ,OAAA6P,QAAK,IAALA,OAAK,EAALA,EAAOE,aAAW,cAAArQ,EAAAC,KAAA,EAAAD,EAAAwG,GAAAxG,EAAA,SAAAA,EAAAM,OAAA,cAGlB7U,GAAS,yBAAAuU,EAAAQ,OAAA,GAAAZ,EAAA,kBAEnB,yBAAAsQ,EAAAllB,MAAA,KAAAK,UAAA,EAdA,IAcA,CAAAoI,IAAA,oBAAAjH,MAAA,eAAA8jB,GAAA7Q,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAyI,IAAA,OAAA1I,EAAAA,EAAAA,KAAApC,MAAA,SAAAmL,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAjQ,MAAA,UAEKpM,KAAK4jB,WACJ,iBAAkB7e,MACQ,YAA5Bof,aAAaC,WAAwB,CAAA/H,EAAAjQ,KAAA,eAAAiQ,EAAAnI,OAAA,cAE9B7U,GAAS,cAAAgd,EAAAxI,KAAA,EAAAwI,EAAAjQ,KAAA,EAIHpM,KAAK4jB,UAAUI,WAAU,cAAA3H,EAAAnI,OAAA,SAAAmI,EAAAlI,MAAA,cAAAkI,EAAAxI,KAAA,EAAAwI,EAAAjC,GAAAiC,EAAA,SAAAA,EAAAnI,OAAA,cAM/B7U,GAAS,yBAAAgd,EAAAjI,OAAA,GAAA4H,EAAA,kBAEnB,yBAAAkI,EAAAtlB,MAAA,KAAAK,UAAA,EApBA,IAoBA,CAAAoI,IAAA,mBAAAjH,MAAA,eAAAikB,GAAAhR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAgK,IAAA,IAAAtV,EAAA,OAAAqL,EAAAA,EAAAA,KAAApC,MAAA,SAAAsM,GAAA,cAAAA,EAAA3J,KAAA2J,EAAApR,MAAA,WACMpM,KAAK6jB,SAAU,CAAFrG,EAAApR,KAAA,eAAAoR,EAAApR,KAAA,EACMpM,KAAK6jB,SAASG,WAAU,OAAjC,KAAN/b,EAAMuV,EAAArJ,MACDtP,MAAO,CAAF2Y,EAAApR,KAAA,eAAAoR,EAAAtJ,OAAA,SAIP,MAAI,cAAAsJ,EAAAtJ,OAAA,SAENjM,EAAO8b,OAAK,cAAAvG,EAAAtJ,OAAA,SAEd,MAAI,wBAAAsJ,EAAApJ,OAAA,GAAAmJ,EAAA,UACZ,yBAAA8G,EAAAzlB,MAAA,KAAAK,UAAA,EAdA,IAcA,CAAAoI,IAAA,aAAAjH,MAAA,eAAAkkB,GAAAjR,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAmK,IAAA,IAAA6G,EAAAC,EAAAC,EAAA,OAAAnR,EAAAA,EAAAA,KAAApC,MAAA,SAAA0M,GAAA,cAAAA,EAAA/J,KAAA+J,EAAAxR,MAAA,cAAAwR,EAAAxR,KAAA,EAC0BpM,KAAK0kB,eAAc,OAA5B,OAATH,EAAS3G,EAAAzJ,KAAAyJ,EAAAxR,KAAG,EACWpM,KAAK2kB,oBAAmB,OAAjC,OAAdH,EAAc5G,EAAAzJ,KAAAyJ,EAAAxR,KAAG,EACKpM,KAAK4kB,mBAAkB,OAAhC,OAAbH,EAAa7G,EAAAzJ,KAAAyJ,EAAA1J,OAAA,SACZ,CAAEqQ,UAAAA,EAAWC,eAAAA,EAAgBC,cAAAA,IAAe,yBAAA7G,EAAAxJ,OAAA,GAAAsJ,EAAA,UACpD,yBAAA4G,EAAA1lB,MAAA,KAAAK,UAAA,EAPA,MAOAskB,CAAA,CA/FyB,GCdfsB,EAAiB,cAmC9B,SAASC,EAAUC,GAIjB,IAAIC,EAAoB,KACxB,MAAO,CACL7d,QAAS,IAAIC,SAAQ,SAACmC,EAAGtC,GACvB+d,EAAQC,YAAW,WACjBhe,EAAO,IAAI6b,EAAe,oBAAqB,wBAC9CiC,EACL,IACAG,OAAQ,WACFF,GACFG,aAAaH,IAIrB,CAEA,IAIaI,EAAgB,WAY3B,SAAAA,EACWtP,EACT0N,EACAC,EACAC,GAEgC,IAAAnc,EAAA,KADhC8d,EAAApmB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAA+B4lB,EACtBS,EAAuBrmB,UAAA4B,OAAA,EAAA5B,UAAA,QAAAI,GAAA8E,EAAAA,EAAAA,GAAA,KAAAihB,GALvB,KAAGtP,IAAHA,EAKA,KAASwP,UAATA,EAhBX,KAAcC,eAAkB,KAkB9BvlB,KAAKwlB,gBAAkB,IAAIjC,EACzBC,EACAC,EACAC,GAGF1jB,KAAKylB,kBAAoB,IAAIre,SAAQ,SAAAF,GACnCK,EAAKme,cAAgB,WACnB,OAAOte,QAAQF,QAAQA,IACzB,CACF,IAGA,IACE,IAAMye,EAAM,IAAIC,IAAIP,GACpBrlB,KAAK6lB,aAAeF,EAAIG,OACxB9lB,KAAK+lB,OAASlB,CACf,CAAC,MAAOlgB,GACP3E,KAAK6lB,aAAe,KACpB7lB,KAAK+lB,OAASV,CACf,EAwBF,OAvBAhhB,EAAAA,EAAAA,GAAA+gB,EAAA,EAAA/d,IAAA,UAAAjH,MAED,WACE,OAAOJ,KAAK0lB,kBAGd,CAAAre,IAAA,OAAAjH,MAKA,SAAKgE,GACH,IAAM4hB,EAAYhmB,KAAK8V,IAAIiB,QAAQiP,UACnC,GAA4B,OAAxBhmB,KAAKulB,eAAyB,CAChC,IAAMO,EAAS9lB,KAAKulB,eACpB,MAAO,GAAPvf,OAAU8f,EAAM,KAAA9f,OAAIggB,EAAS,KAAAhgB,OAAIhG,KAAK+lB,OAAM,KAAA/f,OAAI5B,EACjD,CAED,OAA0B,OAAtBpE,KAAK6lB,aACA,GAAP7f,OAAUhG,KAAK6lB,aAAY,KAAA7f,OAAI5B,GAG1B,WAAP4B,OAAkBhG,KAAK+lB,OAAM,KAAA/f,OAAIggB,EAAS,wBAAAhgB,OAAuB5B,OAClEghB,CAAA,CAhE0B,YAyFba,EACdC,EACA9hB,EACA2S,GAEA,OAAQ,SAAA1N,GACN,OAoEJ,SACE6c,EACA9hB,EACAiF,EACA0N,GAEA,IAAM4O,EAAMO,EAAkBC,KAAK/hB,GACnC,OAAOgiB,EAAUF,EAAmBP,EAAKtc,EAAM0N,EACjD,CA5EWvX,CAAK0mB,EAAmB9hB,EAAMiF,EAAM0N,GAAW,CAAC,EACzD,CACF,CAiBA,SAOesP,EAAQhS,EAAAyF,EAAAQ,EAAAC,GAAA,OAAA+L,EAAA1nB,MAAC,KAADK,UAAA,CAqCvB,SAAAqnB,IAFC,OAEDA,GAAAjT,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MArCA,SAAAsK,EACE8H,EACAY,EACAC,EACAlB,GAAuB,IAAAmB,EAAA/E,EAAA,OAAApO,EAAAA,EAAAA,KAAApC,MAAA,SAAA8M,GAAA,cAAAA,EAAAnK,KAAAmK,EAAA5R,MAAA,OAEsB,OAA7Coa,EAAQ,gBAAkB,mBAAmBxI,EAAAnK,KAAA,EAAAmK,EAAA5R,KAAA,EAI1BkZ,EAAUK,EAAK,CAC9B9W,OAAQ,OACR0X,KAAMhhB,KAAKgX,UAAUgK,GACrBC,QAAAA,IACA,OAJFC,EAAQzI,EAAA7J,KAAA6J,EAAA5R,KAAG,GAAH,oBAAA4R,EAAAnK,KAAG,EAAHmK,EAAA5D,GAAA4D,EAAA,SAAAA,EAAA9J,OAAA,SAUD,CACLgP,OAAQ,EACRxB,KAAM,OACP,QAEqC,OAApCA,EAAgC,KAAI1D,EAAAnK,KAAA,GAAAmK,EAAA5R,KAAA,GAEzBqa,EAAS/E,OAAM,QAA5BA,EAAI1D,EAAA7J,KAAA6J,EAAA5R,KAAG,GAAH,cAAA4R,EAAAnK,KAAG,GAAHmK,EAAA0I,GAAA1I,EAAA,yBAAAA,EAAA9J,OAAA,SAIC,CACLgP,OAAQuD,EAASvD,OACjBxB,KAAAA,IACD,yBAAA1D,EAAA5J,OAAA,GAAAyJ,EAAA,2BACFjf,MAAA,KAAAK,UAAA,CAiBD,SAKemnB,EAASnI,EAAAI,EAAAsI,EAAAC,GAAA,OAAAC,EAAAjoB,MAAC,KAADK,UAAA,UAAA4nB,IAqExB,OArEwBA,GAAAxT,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAA4K,EACE+H,EACAP,EACAtc,EACA0N,GAA6B,IAAAwP,EAAAC,EAAAM,EAAAC,EAAAC,EAAAP,EAAA5hB,EAAAoiB,EAAAC,EAAA,OAAA5T,EAAAA,EAAAA,KAAApC,MAAA,SAAAkN,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAhS,MAAA,OAOgB,OAJ7C/C,EAAOgY,EAAOhY,GACRkd,EAAO,CAAEld,KAAAA,GAGTmd,EAAqC,CAAC,EAACpI,EAAAhS,KAAA,EACvB8Z,EAAkBV,gBAAgB2B,aAAY,OAc1B,OAdpCL,EAAO1I,EAAAjK,MACDoQ,YACViC,EAAuB,cAAI,UAAYM,EAAQvC,WAE7CuC,EAAQtC,iBACVgC,EAAQ,8BAAgCM,EAAQtC,gBAEpB,OAA1BsC,EAAQrC,gBACV+B,EAAQ,uBAAyBM,EAAQrC,eAIrCsC,EAAUhQ,EAAQgQ,SAAW,IAE7BC,EAAkBlC,EAAUiC,GAAQ3I,EAAAhS,KAAA,GACnBhF,QAAQggB,KAAK,CAClCf,EAASV,EAAKY,EAAMC,EAASN,EAAkBZ,WAC/C0B,EAAgB7f,QAChB+e,EAAkBT,oBAClB,WAJIgB,EAAQrI,EAAAjK,KAOd6S,EAAgB9B,SAGXuB,EAAU,CAAFrI,EAAAhS,KAAA,eACL,IAAI0W,EACR,YACA,4CACD,QAI4D,KAAzDje,EAAQoe,EAAkBwD,EAASvD,OAAQuD,EAAS/E,OAC/C,CAAFtD,EAAAhS,KAAA,eACDvH,EAAK,WAGR4hB,EAAS/E,KAAM,CAAFtD,EAAAhS,KAAA,eACV,IAAI0W,EAAe,WAAY,sCAAqC,QAQ3E,GAF2B,qBAHxBmE,EAAeR,EAAS/E,KAAKrY,QAI/B4d,EAAeR,EAAS/E,KAAKzZ,QAEH,qBAAjBgf,EAA4B,CAAA7I,EAAAhS,KAAA,eAE/B,IAAI0W,EAAe,WAAY,mCAAkC,QAIjC,OAAlCoE,EAAczF,EAAOwF,GAAa7I,EAAAlK,OAAA,SAEjC,CAAE7K,KAAM6d,IAAa,yBAAA9I,EAAAhK,OAAA,GAAA+J,EAAA,MAC9Bvf,MAAA,KAAAK,UAAA,KC1SEqmB,EACAhN,oCCKI,SAAU+O,IAE+B,IAD7CvR,EAAA7W,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,IAAmBkZ,EAAAA,EAAAA,MACnBkN,EAAApmB,UAAA4B,OAAA,QAAAxB,IAAAJ,UAAA,GAAAA,UAAA,GAA+B4lB,EAOzBqB,GAJ2C5P,EAAAA,EAAAA,KAC/C7L,EAAAA,EAAAA,IAAmBqL,GACnB8L,GAE0C3M,aAAa,CACvDiK,WAAYmG,IAERiC,GAAWrhB,EAAAA,EAAAA,IAAkC,aAInD,OAHIqhB,GACFC,EAAwB3oB,WAAC,EAAD,CAACsnB,GAAiBlgB,QAAAoH,EAAAA,EAAAA,GAAKka,KAE1CpB,CACT,UAWgBqB,EACdrB,EACA/f,EACAO,aF2FAwf,EACA/f,EACAO,GAEAwf,EAAkBX,eAAiB,UAAHvf,OAAaG,EAAI,KAAAH,OAAIU,EACvD,CE9FE8gB,EACE/c,EAAAA,EAAAA,IAAqCyb,GACrC/f,EACAO,EAEJ,UAOgB+gB,EACdvB,EACA9hB,EACA2S,GAEA,OAAOkP,GACLxb,EAAAA,EAAAA,IAAqCyb,GACrC9hB,EACA2S,EAEJ,CD7DEuO,EEXgBoC,MAAMjpB,KAAKsG,OFmC3BkR,EAAAA,EAAAA,IACE,IAAIuB,EAAAA,GACFoK,GAvB0C,SAC5CnN,EAA6BuE,GAE3B,IADoBqM,EAAoBrM,EAAxCyG,mBAGI3J,EAAMrB,EAAU+B,YAAY,OAAOvB,eACnCuO,EAAe/O,EAAU+B,YAhBkB,iBAiB3CiN,EAAoBhP,EAAU+B,YAbtC,sBAcQkN,EAAmBjP,EAAU+B,YAhBrC,sBAmBE,OAAO,IAAI4O,EACTtP,EACA0N,EACAC,EACAC,EACA2B,EACAC,EAEJ,GAOG,UAACqC,sBAAqB,KAGzBvP,EAAAA,EAAAA,IAAgBhU,EAAM+Q,EAASmD,IAE/BF,EAAAA,EAAAA,IAAgBhU,EAAM+Q,EAAS","sources":["../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@firebase/util/src/constants.ts","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@firebase/logger/src/logger.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/functions/src/serializer.ts","../node_modules/@firebase/functions/src/constants.ts","../node_modules/@firebase/functions/src/error.ts","../node_modules/@firebase/functions/src/context.ts","../node_modules/@firebase/functions/src/service.ts","../node_modules/@firebase/functions/src/config.ts","../node_modules/@firebase/functions/src/api.ts","../node_modules/@firebase/functions/src/index.ts"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const result = await db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nexport function encode(data: unknown): unknown {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data!, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nexport function decode(json: unknown): unknown {\n  if (json == null) {\n    return json;\n  }\n  if ((json as { [key: string]: unknown })['@type']) {\n    switch ((json as { [key: string]: unknown })['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE: {\n        // Technically, this could work return a valid number for malformed\n        // data if there was a number followed by garbage. But it's just not\n        // worth all the extra code to detect that case.\n        const value = Number((json as { [key: string]: unknown })['value']);\n        if (isNaN(value)) {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n        return value;\n      }\n      default: {\n        throw new Error('Data cannot be decoded from JSON: ' + json);\n      }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json!, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Functions.\n */\nexport const FUNCTIONS_TYPE = 'functions';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FunctionsErrorCodeCore as FunctionsErrorCode } from './public-types';\nimport { decode } from './serializer';\nimport { HttpResponseBody } from './service';\nimport { FirebaseError } from '@firebase/util';\nimport { FUNCTIONS_TYPE } from './constants';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nexport class FunctionsError extends FirebaseError {\n  constructor(\n    /**\n     * A standard error code that will be returned to the client. This also\n     * determines the HTTP status code of the response, as defined in code.proto.\n     */\n    code: FunctionsErrorCode,\n    message?: string,\n    /**\n     * Extra data to be converted to JSON and included in the error response.\n     */\n    readonly details?: unknown\n  ) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from '@firebase/component';\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  MessagingInternal,\n  MessagingInternalComponentName\n} from '@firebase/messaging-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\n\n/**\n * The metadata that should be supplied with function calls.\n * @internal\n */\nexport interface Context {\n  authToken?: string;\n  messagingToken?: string;\n  appCheckToken: string | null;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: MessagingInternal | null = null;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  constructor(\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.appCheck) {\n      appCheckProvider.get().then(\n        appCheck => (this.appCheck = appCheck),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      return token?.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getMessagingToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getAppCheckToken(): Promise<string | null> {\n    if (this.appCheck) {\n      const result = await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n\n  async getContext(): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken();\n    return { authToken, messagingToken, appCheckToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport {\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableOptions\n} from './public-types';\nimport { _errorForResponse, FunctionsError } from './error';\nimport { ContextProvider } from './context';\nimport { encode, decode } from './serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n\nexport const DEFAULT_REGION = 'us-central1';\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\ninterface CancellablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis: number): CancellablePromise<never> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer: any | null = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nexport class FunctionsService implements _FirebaseService {\n  readonly contextProvider: ContextProvider;\n  emulatorOrigin: string | null = null;\n  cancelAllRequests: Promise<void>;\n  deleteService!: () => Promise<void>;\n  region: string;\n  customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>,\n    regionOrCustomDomain: string = DEFAULT_REGION,\n    readonly fetchImpl: typeof fetch\n  ) {\n    this.contextProvider = new ContextProvider(\n      authProvider,\n      messagingProvider,\n      appCheckProvider\n    );\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin;\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name: string): string {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: FunctionsService,\n  host: string,\n  port: number\n): void {\n  functionsInstance.emulatorOrigin = `http://${host}:${port}`;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData, ResponseData>(\n  functionsInstance: FunctionsService,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return (data => {\n    return call(functionsInstance, name, data, options || {});\n  }) as HttpsCallable<RequestData, ResponseData>;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<RequestData, ResponseData>(\n  functionsInstance: FunctionsService,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return (data => {\n    return callAtURL(functionsInstance, url, data, options || {});\n  }) as HttpsCallable<RequestData, ResponseData>;\n}\n\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(\n  url: string,\n  body: unknown,\n  headers: { [key: string]: string },\n  fetchImpl: typeof fetch\n): Promise<HttpResponse> {\n  headers['Content-Type'] = 'application/json';\n\n  let response: Response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json: HttpResponseBody | null = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.s\n */\nfunction call(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  const url = functionsInstance._url(name);\n  return callAtURL(functionsInstance, url, data, options);\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.s\n */\nasync function callAtURL(\n  functionsInstance: FunctionsService,\n  url: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n\n  // Add a header for the authToken.\n  const headers: { [key: string]: string } = {};\n  const context = await functionsInstance.contextProvider.getContext();\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([\n    postJSON(url, body, headers, functionsInstance.fetchImpl),\n    failAfterHandle.promise,\n    functionsInstance.cancelAllRequests\n  ]);\n\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError(\n      'cancelled',\n      'Firebase Functions instance was deleted.'\n    );\n  }\n\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n\n  return { data: decodedData };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactory\n} from '@firebase/component';\nimport { FUNCTIONS_TYPE } from './constants';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { name, version } from '../package.json';\n\nconst AUTH_INTERNAL_NAME: FirebaseAuthInternalName = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME: AppCheckInternalComponentName =\n  'app-check-internal';\nconst MESSAGING_INTERNAL_NAME: MessagingInternalComponentName =\n  'messaging-internal';\n\nexport function registerFunctions(\n  fetchImpl: typeof fetch,\n  variant?: string\n): void {\n  const factory: InstanceFactory<'functions'> = (\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }\n  ) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider,\n      regionOrCustomDomain,\n      fetchImpl\n    );\n  };\n\n  _registerComponent(\n    new Component(\n      FUNCTIONS_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\nimport { FUNCTIONS_TYPE } from './constants';\n\nimport { Provider } from '@firebase/component';\nimport { Functions, HttpsCallableOptions, HttpsCallable } from './public-types';\nimport {\n  FunctionsService,\n  DEFAULT_REGION,\n  connectFunctionsEmulator as _connectFunctionsEmulator,\n  httpsCallable as _httpsCallable,\n  httpsCallableFromURL as _httpsCallableFromURL\n} from './service';\nimport {\n  getModularInstance,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nexport * from './public-types';\n\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nexport function getFunctions(\n  app: FirebaseApp = getApp(),\n  regionOrCustomDomain: string = DEFAULT_REGION\n): Functions {\n  // Dependencies\n  const functionsProvider: Provider<'functions'> = _getProvider(\n    getModularInstance(app),\n    FUNCTIONS_TYPE\n  );\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('functions');\n  if (emulator) {\n    connectFunctionsEmulator(functionsInstance, ...emulator);\n  }\n  return functionsInstance;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: Functions,\n  host: string,\n  port: number\n): void {\n  _connectFunctionsEmulator(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    host,\n    port\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData = unknown, ResponseData = unknown>(\n  functionsInstance: Functions,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return _httpsCallable<RequestData, ResponseData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    name,\n    options\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the specified url.\n * @param url - The url of the trigger.\n * @public\n */\nexport function httpsCallableFromURL<\n  RequestData = unknown,\n  ResponseData = unknown\n>(\n  functionsInstance: Functions,\n  url: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return _httpsCallableFromURL<RequestData, ResponseData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    url,\n    options\n  );\n}\n","/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerFunctions } from './config';\n\nexport * from './api';\nexport * from './public-types';\n\nregisterFunctions(fetch.bind(self));\n"],"names":["_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","instance","Function","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","Object","create","value","enumerable","writable","configurable","stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","_Error","_inherits","_super","_createSuper","_this","_classCallCheck","name","_createClass","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","getDefaultsFromGlobal","self","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","concat","getDefaultEmulatorHostnameAndPort","productName","host","_a","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","lastIndexOf","port","parseInt","substring","getDefaultAppConfig","config","Deferred","_this2","reject","resolve","promise","Promise","key","callback","_this3","catch","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","FirebaseError","_Error2","_super2","code","customData","_this4","_assertThisInitialized","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","data","PATTERN","_","replaceTemplate","fullMessage","deepEqual","b","aKeys","keys","bKeys","_i","_aKeys","k","includes","aProp","bProp","isObject","_i2","_bKeys","thing","getModularInstance","_delegate","ReferenceError","Constructor","_defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","F","s","n","done","_e","f","err","normalCompletion","didErr","step","next","_e2","Derived","hasNativeReflectConstruct","Super","NewTarget","assertThisInitialized","_getPrototypeOf","__proto__","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_toConsumableArray","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","LogLevel","instances","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","_ConsoleMethod","_defineProperty","defaultLogHandler","logType","logLevel","now","Date","toISOString","method","_console","_len","_key","Logger","_logLevel","_logHandler","_userLogHandler","val","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","objectStoreNames","objectStore","wrap","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","success","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","_args","_context","prev","store","index","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","PlatformLoggerServiceImpl","container","getProviders","map","provider","component","getComponent","type","isVersionServiceProvider","getImmediate","library","version","filter","logString","logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","name$o","_apps","_components","_addComponent","app","addComponent","debug","_registerComponent","componentName","_step","values","_iterator","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","ERRORS","_ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","_step2","ComponentContainer","_iterator2","newApp","getApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","_ref","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","idbGetError","_context8","computeKey","t0","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","_context9","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_triggerHeartbeat","platformLogger","agent","date","getPlatformInfoString","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_context2","extractHeartbeatsForHeader","stringify","heartbeatsCache","_step3","maxSize","slice","_iterator3","_loop","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_context3","_read","_callee4","idbHeartbeatObject","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_context5","_x5","_overwrite","_callee6","_context6","_x6","_add","version$1","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","mode","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","isComponentEager","entries","_step$value","_slicedToArray","instanceDeferred","delete","services","INTERNAL","_delete","_delete2","opts","_opts$options","isComponentSet","_step2$value","existingCallbacks","Set","add","existingInstance","callbacks","_ref$options","invokeOnInitCallbacks","providers","setComponent","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","hasOwnProperty","encode","Number","isFinite","x","decode","json","isNaN","FUNCTIONS_TYPE","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FunctionsError","_FirebaseError","details","_errorForResponse","status","bodyJSON","codeForHTTPStatus","description","errorJSON","ContextProvider","authProvider","messagingProvider","appCheckProvider","auth","messaging","appCheck","_getAuthToken","token","getToken","accessToken","_getMessagingToken","Notification","permission","_getAppCheckToken","_getContext","authToken","messagingToken","appCheckToken","getAuthToken","getMessagingToken","getAppCheckToken","DEFAULT_REGION","failAfter","millis","timer","setTimeout","cancel","clearTimeout","FunctionsService","regionOrCustomDomain","fetchImpl","emulatorOrigin","contextProvider","cancelAllRequests","deleteService","url","URL","customDomain","origin","region","projectId","httpsCallable$1","functionsInstance","_url","callAtURL","postJSON","_postJSON","body","headers","response","t1","_x7","_x8","_callAtURL","context","timeout","failAfterHandle","responseData","decodedData","getContext","race","getFunctions","emulator","connectFunctionsEmulator","connectFunctionsEmulator$1","httpsCallable","fetch","setMultipleInstances"],"sourceRoot":""}
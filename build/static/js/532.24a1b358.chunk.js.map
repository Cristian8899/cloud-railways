{"version":3,"file":"static/js/532.24a1b358.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/tickets/NoTicketsFound.module.css?0610","components/tickets/NoTicketsFound.js","webpack://react-complete-guide/./src/components/tickets/TicketItem.module.css?8a66","components/tickets/TicketItem.js","components/tickets/TicketList.js","hooks/use-http.js","lib/api.js","webpack://react-complete-guide/./src/components/tickets/RideItem.module.css?3a5c","components/tickets/ConfirmationModal.js","components/tickets/RideItem.js","components/tickets/CoursesList.js","pages/AvailableCourses.js","webpack://react-complete-guide/./src/components/tickets/TicketList.module.css?b010"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notickets\":\"NoTicketsFound_notickets__FqAs1\"};","import {Link} from 'react-router-dom'\n\nimport classes from './NoTicketsFound.module.css';\n\n\n\nconst NoTicketsFound = (props) => {\n  return (\n    <div className={classes.notickets}>\n      <p>{props.text}</p>\n      <Link className='btn' to='/new-ticket'>\n        Buy a Ticket\n      </Link>\n    </div>\n  );\n};\n\nexport default NoTicketsFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"TicketItem_item__WglAm\"};","import { Link } from 'react-router-dom';\n\nimport classes from './TicketItem.module.css';\n\nconst TicketItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p> <span>From: </span>{props.origin} <span>To: </span> {props.destination} </p>\n          \n        </blockquote>\n        <figcaption>{props.date}</figcaption>\n        <figcaption>{props.hour}</figcaption>\n\n\n      </figure>\n      <Link className='btn' to={`/tickets/${props.id}`}>\n        View Ticket\n      </Link>\n    </li>\n  );\n};\n\nexport default TicketItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport TicketItem from \"./TicketItem\";\nimport classes from \"./TicketList.module.css\";\n\nconst sortTickets = (tickets, ascending) => {\n  return tickets.sort((ticketA, ticketB) => {\n    if (ascending) {\n      return ticketA.date > ticketB.date ? 1 : -1;\n    } else {\n      return ticketA.date < ticketB.date ? 1 : -1;\n    }\n  });\n};\n\nconst TicketList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedTickets = sortTickets(props.tickets, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}` );\n  };\n\n  return (\n    <Fragment>\n     <span className={classes.titlu}>Tickets History</span>\n\n      <div className={classes.sorting}>\n      <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"} by Date\n        </button>\n       \n      </div>\n\n      <ul className={classes.list}>\n        {sortedTickets.map((ticket) => (\n          <TicketItem\n            key={ticket.id}\n            id={ticket.id}\n            origin={ticket.origin}\n            destination={ticket.destination}\n            date={ticket.date}\n            hour={ticket.hour}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default TicketList;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-http-c27a0-default-rtdb.firebaseio.com\";\nconst FIREBASE_RAILWAYS_API_DOMAIN = \"https://railways-api-f9661-default-rtdb.firebaseio.com/\";\n\nexport async function getAllTickets() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/tickets.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const transformedTickets = [];\n\n  for (const key in data) {\n    const ticketObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedTickets.push(ticketObj);\n  }\n\n  return transformedTickets;\n}\n\n\nexport async function getTicketsByUser(email) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/tickets.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const transformedTickets = [];\n\n  for (const key in data) {\n    const ticketObj = {\n      id: key,\n      ...data[key],\n    };\n\n    if (ticketObj.user === email) {\n    transformedTickets.push(ticketObj);}\n  }\n\n  return transformedTickets;\n}\n\n\nexport async function getRailwaysByOrigin(obj) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/tickets.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const transformedTickets = [];\n\n  for (const key in data) {\n    const ticketObj = {\n      id: key,\n      ...data[key],\n    };\n\n    if (ticketObj.origin === obj.origin && ticketObj.destination === obj.destination) {\n      transformedTickets.push(ticketObj);\n    }\n  }\n\n  return transformedTickets;\n}\n\nexport async function getSingleTicket(ticketId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/tickets/${ticketId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const loadedTicket = {\n    id: ticketId,\n    ...data,\n  };\n\n  return loadedTicket;\n}\n\nexport async function addTicket(ticketData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/tickets.json`, {\n    method: \"POST\",\n    body: JSON.stringify(ticketData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create ticket.\");\n  }\n\n  return null;\n}\n\nexport async function addRailwayStation(railwayStationData) {\n  const response = await fetch(`${FIREBASE_RAILWAYS_API_DOMAIN}/railwayStation.json`, {\n    method: \"POST\",\n    body: JSON.stringify(railwayStationData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create railway station.\");\n  }\n\n  return null;\n}\n\nexport async function addRide(rideData) {\n  const response = await fetch(`${FIREBASE_RAILWAYS_API_DOMAIN}/rides.json`, {\n    method: \"POST\",\n    body: JSON.stringify(rideData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create ride.\");\n  }\n\n  return null;\n}\n\n\nexport async function getRidesByOrigin(obj) {\n  const response = await fetch(`${FIREBASE_RAILWAYS_API_DOMAIN}/rides.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const transformedTickets = [];\n\n  for (const key in data) {\n    const ticketObj = {\n      id: key,\n      ...data[key],\n    };\n\n    if (ticketObj.origin === obj.origin && ticketObj.destination === obj.destination) {\n      transformedTickets.push(ticketObj);\n    }\n  }\n\n  return transformedTickets;\n}\n\n\n\nexport async function getAllRailwayStations() {\n  const response = await fetch(`${FIREBASE_RAILWAYS_API_DOMAIN}/railwayStation.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch tickets.\");\n  }\n\n  const transformedTickets = [];\n\n  for (const key in data) {\n    const value = data[key]\n\n    transformedTickets.push(value);\n  }\n\n  return transformedTickets;\n}\n\n\n\n\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"RideItem_item__Zjuvy\",\"titlu\":\"RideItem_titlu__SNJgr\"};","import './ConfirmationModal.css'; \r\n\r\nconst ConfirmationModal = ({ children, onConfirm, onCancel }) => {\r\n  return (\r\n    <div className='confirmation-modal'>\r\n      <div className='confirmation-modal-content'>\r\n        {children}\r\n        <div className='confirmation-modal-buttons'>\r\n          <button onClick={onConfirm} className='confirmation-modal-yes'>Yes</button>\r\n          <button onClick={onCancel} className='confirmation-modal-no'>No</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import { Link } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { addTicket } from '../../lib/api';\nimport { useContext, useEffect , useState} from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport classes from './RideItem.module.css';\nimport AuthContext from '../../store/auth-context';\nimport ConfirmationModal from './ConfirmationModal';\n\nconst RideItem = (props) => {\n  \n  const { sendRequest, status } = useHttp(addTicket);\n  const history = useHistory();\n  const authCtx = useContext(AuthContext)\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(()=>{\n    if (status === 'completed') {\n       history.push('/tickets')\n    }\n  },[status]);\n\n  const onClickHandler = function(){\n    setShowModal(true);\n  }\n\n  const onModalConfirmHandler = function() {\n    setShowModal(false);\n    sendRequest({\n      origin: props.origin,\n      destination: props.destination,\n      date: props.date,\n      hour: props.hour,\n      user: authCtx.email,\n      seat: Math.trunc(Math.random()*300)+1\n    });\n  }\n\n  const onModalCancelHandler = function() {\n    setShowModal(false);\n  }\n\n\n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p> <span>From: </span>{props.origin} <span>To: </span> {props.destination} </p>\n          \n        </blockquote>\n        <figcaption>Date: {props.date}  Time: {props.hour}</figcaption>\n\n      </figure>\n      <button onClick = {onClickHandler}className='btn'/* to={`/tickets/${props.id}` } */>\n        {/* trebuie cand apesi pe asta sa adaugi biletul la lista bilee. si termin tot greul */}\n        Buy Ticket\n      </button> \n\n\n      {showModal && (\n        <ConfirmationModal onConfirm={onModalConfirmHandler} onCancel={onModalCancelHandler}>\n          Are you sure you want to buy this ticket?\n        </ConfirmationModal>\n      )}\n\n\n\n\n    </li>\n  );\n};\n\nexport default RideItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classes from \"./TicketList.module.css\";\nimport RideItem from \"../tickets/RideItem\";\n\nconst sortTickets = (tickets, ascending) => {\n  return tickets.sort((ticketA, ticketB) => {\n    if (ascending) {\n      return ticketA.hour > ticketB.hour ? 1 : -1;\n    } else {\n      return ticketA.hour < ticketB.hour ? 1 : -1;\n    }\n  });\n};\n\nconst CoursesList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedTickets = sortTickets(props.tickets, \"asc\");\n\n  \n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}` );\n  };\n  console.log(sortedTickets);\n  return (\n    <Fragment>\n      {/* <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"} by Date\n        </button>\n      </div> */}\n      <span className={classes.titlu}>Available Courses</span>\n\n      <ul className={classes.list}>\n        \n        {sortedTickets.map((ticket) => (\n          <RideItem\n            key={ticket.id}\n            id={ticket.id}\n            origin={ticket.origin}\n            destination={ticket.destination}\n            date={props.date}\n            hour={ticket.hour}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default CoursesList;\n","import { Fragment, useEffect } from \"react\";\r\nimport { Route, useRouteMatch } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport TicketList from \"../components/tickets/TicketList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllTickets, getRailwaysByOrigin, getRidesByOrigin } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoTicketsFound from \"../components/tickets/NoTicketsFound\";\r\nimport CoursesList from \"../components/tickets/CoursesList\";\r\n\r\nconst AvailableCourses = (props) => {\r\n\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const {origin,destination,date} = params;\r\n\r\n  const {sendRequest,status, data: loadedTickets,error} = useHttp(getRidesByOrigin, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest({origin: origin , destination: destination })\r\n  }, [sendRequest,origin,destination]);\r\n\r\n\r\n  \r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner></LoadingSpinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedTickets || loadedTickets.length === 0)\r\n  ) {\r\n    return <NoTicketsFound text=\"No Courses Available\"></NoTicketsFound>;\r\n  }\r\n\r\n console.log(loadedTickets);\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <CoursesList tickets={loadedTickets} date={date}/>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AvailableCourses;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TicketList_list__bhyO4\",\"sorting\":\"TicketList_sorting__Rnuus\",\"titlu\":\"TicketList_titlu__tuzel\"};"],"names":["props","_jsxs","className","classes","children","_jsx","text","Link","to","origin","destination","date","hour","concat","id","tickets","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedTickets","sort","ticketA","ticketB","Fragment","onClick","push","pathname","map","ticket","TicketItem","httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","arguments","length","undefined","_useReducer","useReducer","_useReducer2","_slicedToArray","httpState","dispatch","sendRequest","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestData","wrap","_context","prev","next","sent","t0","message","stop","_x","apply","_objectSpread","FIREBASE_DOMAIN","FIREBASE_RAILWAYS_API_DOMAIN","getTicketsByUser","_getTicketsByUser","_callee2","email","response","transformedTickets","key","ticketObj","_context2","fetch","json","ok","Error","user","abrupt","getSingleTicket","_x3","_getSingleTicket","_callee4","ticketId","loadedTicket","_context4","addTicket","_x4","_addTicket","_callee5","ticketData","_context5","method","body","JSON","stringify","headers","addRide","_x6","_addRide","_callee7","rideData","_context7","getRidesByOrigin","_x7","_getRidesByOrigin","_callee8","obj","_context8","getAllRailwayStations","_getAllRailwayStations","_callee9","value","_context9","onConfirm","onCancel","_useHttp","useHttp","authCtx","useContext","AuthContext","_useState","useState","_useState2","showModal","setShowModal","useEffect","ConfirmationModal","seat","Math","trunc","random","console","log","RideItem","useRouteMatch","params","useParams","loadedTickets","LoadingSpinner","CoursesList","NoTicketsFound"],"sourceRoot":""}